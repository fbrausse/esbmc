./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/ldv-sets/test_add-1.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/ldv-sets/test_add-1.i --32 --witness-output test_add-1.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --goto-unwind --unlimited-goto-unwind --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/ldv-sets/test_add-1.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.175s
GOTO program processing time: 0.002s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Symex completed in: 0.009s (89 assignments)
Slicing time: 0.000s (removed 50 assignments)
Generated 1 VCC(s), 1 remaining after simplification (39 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.004s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.004s
Runtime decision procedure: 0.059s
Building error trace

Counterexample:

State 1 file test_add-1.i line 665 function foo thread 0
----------------------------------------------------
  j = 0 (00000000 00000000 00000000 00000000)

State 2 file test_add-1.i line 652 function ldv_is_in_set thread 0
----------------------------------------------------
  m = &s1

State 3 file test_add-1.i line 636 function ldv_set_add thread 0
----------------------------------------------------
  le->e = 0 (00000000 00000000 00000000 00000000)

State 4 file test_add-1.i line 636 function ldv_set_add thread 0
----------------------------------------------------
  le->e = 0 (00000000 00000000 00000000 00000000)

State 5 file test_add-1.i line 636 function ldv_set_add thread 0
----------------------------------------------------
  le->e = 0 (00000000 00000000 00000000 00000000)

State 6 file test_add-1.i line 636 function ldv_set_add thread 0
----------------------------------------------------
  le->e = 0 (00000000 00000000 00000000 00000000)

State 7 file test_add-1.i line 594 function __ldv_list_add thread 0
----------------------------------------------------
  new->next = (unsigned int)(( struct ldv_list_head *)(&s1))

State 8 file test_add-1.i line 594 function __ldv_list_add thread 0
----------------------------------------------------
  new->next = (unsigned int)(( struct ldv_list_head *)(&s1))

State 9 file test_add-1.i line 594 function __ldv_list_add thread 0
----------------------------------------------------
  new->next = (unsigned int)(( struct ldv_list_head *)(&s1))

State 10 file test_add-1.i line 594 function __ldv_list_add thread 0
----------------------------------------------------
  new->next = (unsigned int)(( struct ldv_list_head *)(&s1))

State 11 file test_add-1.i line 595 function __ldv_list_add thread 0
----------------------------------------------------
  new->prev = (unsigned int)(( struct ldv_list_head *)(&s1))

State 12 file test_add-1.i line 595 function __ldv_list_add thread 0
----------------------------------------------------
  new->prev = (unsigned int)(( struct ldv_list_head *)(&s1))

State 13 file test_add-1.i line 595 function __ldv_list_add thread 0
----------------------------------------------------
  new->prev = (unsigned int)(( struct ldv_list_head *)(&s1))

State 14 file test_add-1.i line 595 function __ldv_list_add thread 0
----------------------------------------------------
  new->prev = (unsigned int)(( struct ldv_list_head *)(&s1))

State 15 file test_add-1.i line 652 function ldv_is_in_set thread 0
----------------------------------------------------
  __mptr = s1.next

State 16 file test_add-1.i line 652 function ldv_is_in_set thread 0
----------------------------------------------------
  m = &dynamic_2_array[0]

State 17 file test_add-1.i line 562 function reach_error thread 0
----------------------------------------------------
Violated property:
  file test_add-1.i line 562 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 1)


FALSE_REACH
