./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/loops/sum_array-1.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/loops/sum_array-1.c --32 --witness-output sum_array-1.c.graphml --no-pointer-check --no-bounds-check --interval-analysis --goto-unwind --unlimited-goto-unwind --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/loops/sum_array-1.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.089s
GOTO program processing time: 0.001s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Symex completed in: 0.001s (45 assignments)
Slicing time: 0.001s (removed 27 assignments)
Generated 1 VCC(s), 1 remaining after simplification (18 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.000s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.000s
Runtime decision procedure: 0.001s
BMC program time: 0.003s
No bug has been found in the base case
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Symex completed in: 0.001s (44 assignments)
Slicing time: 0.000s (removed 27 assignments)
Generated 4 VCC(s), 4 remaining after simplification (17 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.000s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.000s
Runtime decision procedure: 0.002s
The forward condition is unable to prove the property
*** Checking base case, k = 6
Starting Bounded Model Checking
Unwinding loop 1  iteration  1   file sum_array-1.c line 20 function main
Unwinding loop 1  iteration  2   file sum_array-1.c line 20 function main
Unwinding loop 1  iteration  3   file sum_array-1.c line 20 function main
Unwinding loop 1  iteration  4   file sum_array-1.c line 20 function main
Unwinding loop 1  iteration  5   file sum_array-1.c line 20 function main
Not unwinding 
Unwinding loop 2  iteration  1   file sum_array-1.c line 23 function main
Unwinding loop 2  iteration  2   file sum_array-1.c line 23 function main
Unwinding loop 2  iteration  3   file sum_array-1.c line 23 function main
Unwinding loop 2  iteration  4   file sum_array-1.c line 23 function main
Unwinding loop 2  iteration  5   file sum_array-1.c line 23 function main
Not unwinding 
Unwinding loop 3  iteration  1   file sum_array-1.c line 26 function main
Unwinding loop 3  iteration  2   file sum_array-1.c line 26 function main
Unwinding loop 3  iteration  3   file sum_array-1.c line 26 function main
Unwinding loop 3  iteration  4   file sum_array-1.c line 26 function main
Unwinding loop 3  iteration  5   file sum_array-1.c line 26 function main
Not unwinding 
Unwinding loop 4  iteration  1   file sum_array-1.c line 29 function main
Unwinding loop 4  iteration  2   file sum_array-1.c line 29 function main
Unwinding loop 4  iteration  3   file sum_array-1.c line 29 function main
Unwinding loop 4  iteration  4   file sum_array-1.c line 29 function main
Unwinding loop 4  iteration  5   file sum_array-1.c line 29 function main
Not unwinding 
Symex completed in: 0.004s (155 assignments)
Slicing time: 0.002s (removed 70 assignments)
Generated 6 VCC(s), 6 remaining after simplification (85 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.001s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.001s
Runtime decision procedure: 0.113s
Building error trace

Counterexample:

State 1 file sum_array-1.c line 16 function main thread 0
----------------------------------------------------
  M = 4 (00000000 00000000 00000000 00000100)

State 2 file sum_array-1.c line 21 function main thread 0
----------------------------------------------------
  A[0] = 1073774592 (01000000 00000000 10000000 00000000)

State 3 file sum_array-1.c line 21 function main thread 0
----------------------------------------------------
  A[1] = 2147483640 (01111111 11111111 11111111 11111000)

State 4 file sum_array-1.c line 21 function main thread 0
----------------------------------------------------
  A[2] = -259522560 (11110000 10001000 00000000 00000000)

State 5 file sum_array-1.c line 21 function main thread 0
----------------------------------------------------
  A[3] = -1004 (11111111 11111111 11111100 00010100)

State 6 file sum_array-1.c line 24 function main thread 0
----------------------------------------------------
  B[0] = 1073774592 (01000000 00000000 10000000 00000000)

State 7 file sum_array-1.c line 24 function main thread 0
----------------------------------------------------
  B[1] = 2147483640 (01111111 11111111 11111111 11111000)

State 8 file sum_array-1.c line 24 function main thread 0
----------------------------------------------------
  B[2] = -259521536 (11110000 10001000 00000100 00000000)

State 9 file sum_array-1.c line 24 function main thread 0
----------------------------------------------------
  B[3] = -1004 (11111111 11111111 11111100 00010100)

State 10 file sum_array-1.c line 27 function main thread 0
----------------------------------------------------
  C[0] = -2147418112 (10000000 00000001 00000000 00000000)

State 11 file sum_array-1.c line 27 function main thread 0
----------------------------------------------------
  C[1] = -16 (11111111 11111111 11111111 11110000)

State 12 file sum_array-1.c line 27 function main thread 0
----------------------------------------------------
  C[2] = -519044096 (11100001 00010000 00000100 00000000)

State 13 file sum_array-1.c line 27 function main thread 0
----------------------------------------------------
  C[3] = -2008 (11111111 11111111 11111000 00101000)

State 14 file sum_array-1.c line 3 function reach_error thread 0
----------------------------------------------------
Violated property:
  file sum_array-1.c line 3 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 6)


FALSE_REACH
