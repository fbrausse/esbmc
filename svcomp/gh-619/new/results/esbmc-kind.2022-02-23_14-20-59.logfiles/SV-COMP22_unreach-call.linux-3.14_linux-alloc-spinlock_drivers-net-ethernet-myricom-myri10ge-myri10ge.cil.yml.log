./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 64 ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i --64 --witness-output linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --goto-unwind --unlimited-goto-unwind --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 64-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/ldv-linux-3.14/linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 1.845s
GOTO program processing time: 8.128s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
No target candidate for function call *ops->alloc
Not unwinding 
No target candidate for function call *ops->free
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
No target candidate for function call *arg0
No target candidate for function call *arg0
Not unwinding 
Not unwinding 
No target candidate for function call *arg0
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
No target candidate for function call *ops->free
Not unwinding 
Symex completed in: 0.791s (1669 assignments)
Slicing time: 0.007s (removed 1264 assignments)
Generated 2 VCC(s), 2 remaining after simplification (405 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.052s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.052s
Runtime decision procedure: 8.775s
Building error trace

Counterexample:

State 1 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 16896 function ldv_undef_int thread 0
----------------------------------------------------
  tmp = 0 (00000000 00000000 00000000 00000000)

State 2 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 16562 function ldv___pci_register_driver_125 thread 0
----------------------------------------------------
  ldv_func_res = 0 (00000000 00000000 00000000 00000000)

State 3 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 16896 function ldv_undef_int thread 0
----------------------------------------------------
  tmp = -1 (11111111 11111111 11111111 11111111)

State 4 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 16896 function ldv_undef_int thread 0
----------------------------------------------------
  tmp = -1 (11111111 11111111 11111111 11111111)

State 5 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 16896 function ldv_undef_int thread 0
----------------------------------------------------
  tmp = -2147483648 (10000000 00000000 00000000 00000000)

State 6 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 16896 function ldv_undef_int thread 0
----------------------------------------------------
  tmp = -1 (11111111 11111111 11111111 11111111)

State 7 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14171 function myri10ge_probe thread 0
----------------------------------------------------
  netdev->dev.parent = (unsigned long int)(( struct device *)(( struct device {  struct device * parent;  struct device_private * p;  struct kobject { signed char * name;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct kobject * parent;  struct kset * kset;  struct kobj_type * ktype;  struct kernfs_node * sd;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }kref; unsigned int pad$7;  struct delayed_work {  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }timer;  struct workqueue_struct * wq; signed int cpu; unsigned int pad$4; }release; unsigned _ExtInt(1) state_initialized; unsigned _ExtInt(1) state_in_sysfs; unsigned _ExtInt(1) state_add_uevent_sent; unsigned _ExtInt(1) state_remove_uevent_sent; unsigned _ExtInt(1) uevent_suppress; unsigned _ExtInt(3) bit_field_pad$13; unsigned _ExtInt(56) pad$15; }kobj; signed char * init_name;  struct device_type * type;  struct mutex {  struct __anonstruct_atomic_t_6 { signed int counter; }count; unsigned int pad$1;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }wait_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }wait_list;  struct task_struct * owner; signed char * name; void * magic;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }mutex;  struct bus_type * bus;  struct device_driver * driver; void * platform_data;  struct dev_pm_info {  struct pm_message { signed int event; }power_state; unsigned _ExtInt(1) can_wakeup; unsigned _ExtInt(1) async_suspend; _Bool is_prepared; _Bool is_suspended; _Bool ignore_children; _Bool early_init; unsigned _ExtInt(2) bit_field_pad$7; unsigned _ExtInt(24) pad$8;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct completion { unsigned int done; unsigned int pad$1;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait; }completion;  struct wakeup_source * wakeup; _Bool wakeup_path; _Bool syscore; unsigned _ExtInt(6) bit_field_pad$14; unsigned _ExtInt(56) pad$16;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }suspend_timer; unsigned long int timer_expires;  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait_queue;  struct __anonstruct_atomic_t_6 { signed int counter; }usage_count;  struct __anonstruct_atomic_t_6 { signed int counter; }child_count; unsigned _ExtInt(3) disable_depth; unsigned _ExtInt(1) idle_notification; unsigned _ExtInt(1) request_pending; unsigned _ExtInt(1) deferred_resume; unsigned _ExtInt(1) run_wake; unsigned _ExtInt(1) runtime_auto; unsigned _ExtInt(1) no_callbacks; unsigned _ExtInt(1) irq_safe; unsigned _ExtInt(1) use_autosuspend; unsigned _ExtInt(1) timer_autosuspends; unsigned _ExtInt(1) memalloc_noio; unsigned _ExtInt(3) bit_field_pad$32; unsigned short int pad$35; signed int request; signed int runtime_status; signed int runtime_error; signed int autosuspend_delay; unsigned int pad$40; unsigned long int last_busy; unsigned long int active_jiffies; unsigned long int suspended_jiffies; unsigned long int accounting_timestamp;  struct pm_subsys_data * subsys_data;  struct dev_pm_qos * qos; }power; unsigned short int pad$10;  struct dev_pm_domain * pm_domain;  struct dev_pin_info * pins; signed int numa_node; unsigned int pad$14; unsigned long int * dma_mask; unsigned long int coherent_dma_mask;  struct device_dma_parameters * dma_parms;  struct list_head {  struct list_head * next;  struct list_head * prev; }dma_pools;  struct dma_coherent_mem * dma_mem;  struct dev_archdata {  struct dma_map_ops * dma_ops; void * iommu; }archdata;  struct device_node * of_node;  struct acpi_dev_node {  struct acpi_device * companion; }acpi_node; unsigned int devt; unsigned int id;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }devres_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }devres_head;  struct klist_node { void * n_klist;  struct list_head {  struct list_head * next;  struct list_head * prev; }n_node;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }n_ref; unsigned int pad$3; }knode_class;  struct class * class;  struct attribute_group * * groups; void (*)( struct device *);  struct iommu_group * iommu_group; _Bool offline_disabled; _Bool offline; unsigned _ExtInt(6) bit_field_pad$32; unsigned _ExtInt(56) pad$35; } *)((unsigned char *)(( struct pci_dev *)(&dynamic_9_array[0])) + 152)))

State 8 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14171 function myri10ge_probe thread 0
----------------------------------------------------
  netdev->dev.parent = (unsigned long int)(( struct device *)(( struct device {  struct device * parent;  struct device_private * p;  struct kobject { signed char * name;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct kobject * parent;  struct kset * kset;  struct kobj_type * ktype;  struct kernfs_node * sd;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }kref; unsigned int pad$7;  struct delayed_work {  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }timer;  struct workqueue_struct * wq; signed int cpu; unsigned int pad$4; }release; unsigned _ExtInt(1) state_initialized; unsigned _ExtInt(1) state_in_sysfs; unsigned _ExtInt(1) state_add_uevent_sent; unsigned _ExtInt(1) state_remove_uevent_sent; unsigned _ExtInt(1) uevent_suppress; unsigned _ExtInt(3) bit_field_pad$13; unsigned _ExtInt(56) pad$15; }kobj; signed char * init_name;  struct device_type * type;  struct mutex {  struct __anonstruct_atomic_t_6 { signed int counter; }count; unsigned int pad$1;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }wait_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }wait_list;  struct task_struct * owner; signed char * name; void * magic;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }mutex;  struct bus_type * bus;  struct device_driver * driver; void * platform_data;  struct dev_pm_info {  struct pm_message { signed int event; }power_state; unsigned _ExtInt(1) can_wakeup; unsigned _ExtInt(1) async_suspend; _Bool is_prepared; _Bool is_suspended; _Bool ignore_children; _Bool early_init; unsigned _ExtInt(2) bit_field_pad$7; unsigned _ExtInt(24) pad$8;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct completion { unsigned int done; unsigned int pad$1;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait; }completion;  struct wakeup_source * wakeup; _Bool wakeup_path; _Bool syscore; unsigned _ExtInt(6) bit_field_pad$14; unsigned _ExtInt(56) pad$16;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }suspend_timer; unsigned long int timer_expires;  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait_queue;  struct __anonstruct_atomic_t_6 { signed int counter; }usage_count;  struct __anonstruct_atomic_t_6 { signed int counter; }child_count; unsigned _ExtInt(3) disable_depth; unsigned _ExtInt(1) idle_notification; unsigned _ExtInt(1) request_pending; unsigned _ExtInt(1) deferred_resume; unsigned _ExtInt(1) run_wake; unsigned _ExtInt(1) runtime_auto; unsigned _ExtInt(1) no_callbacks; unsigned _ExtInt(1) irq_safe; unsigned _ExtInt(1) use_autosuspend; unsigned _ExtInt(1) timer_autosuspends; unsigned _ExtInt(1) memalloc_noio; unsigned _ExtInt(3) bit_field_pad$32; unsigned short int pad$35; signed int request; signed int runtime_status; signed int runtime_error; signed int autosuspend_delay; unsigned int pad$40; unsigned long int last_busy; unsigned long int active_jiffies; unsigned long int suspended_jiffies; unsigned long int accounting_timestamp;  struct pm_subsys_data * subsys_data;  struct dev_pm_qos * qos; }power; unsigned short int pad$10;  struct dev_pm_domain * pm_domain;  struct dev_pin_info * pins; signed int numa_node; unsigned int pad$14; unsigned long int * dma_mask; unsigned long int coherent_dma_mask;  struct device_dma_parameters * dma_parms;  struct list_head {  struct list_head * next;  struct list_head * prev; }dma_pools;  struct dma_coherent_mem * dma_mem;  struct dev_archdata {  struct dma_map_ops * dma_ops; void * iommu; }archdata;  struct device_node * of_node;  struct acpi_dev_node {  struct acpi_device * companion; }acpi_node; unsigned int devt; unsigned int id;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }devres_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }devres_head;  struct klist_node { void * n_klist;  struct list_head {  struct list_head * next;  struct list_head * prev; }n_node;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }n_ref; unsigned int pad$3; }knode_class;  struct class * class;  struct attribute_group * * groups; void (*)( struct device *);  struct iommu_group * iommu_group; _Bool offline_disabled; _Bool offline; unsigned _ExtInt(6) bit_field_pad$32; unsigned _ExtInt(56) pad$35; } *)((unsigned char *)(( struct pci_dev *)(&dynamic_9_array[0])) + 152)))

State 9 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14171 function myri10ge_probe thread 0
----------------------------------------------------
  netdev->dev.parent = (unsigned long int)(( struct device *)(( struct device {  struct device * parent;  struct device_private * p;  struct kobject { signed char * name;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct kobject * parent;  struct kset * kset;  struct kobj_type * ktype;  struct kernfs_node * sd;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }kref; unsigned int pad$7;  struct delayed_work {  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }timer;  struct workqueue_struct * wq; signed int cpu; unsigned int pad$4; }release; unsigned _ExtInt(1) state_initialized; unsigned _ExtInt(1) state_in_sysfs; unsigned _ExtInt(1) state_add_uevent_sent; unsigned _ExtInt(1) state_remove_uevent_sent; unsigned _ExtInt(1) uevent_suppress; unsigned _ExtInt(3) bit_field_pad$13; unsigned _ExtInt(56) pad$15; }kobj; signed char * init_name;  struct device_type * type;  struct mutex {  struct __anonstruct_atomic_t_6 { signed int counter; }count; unsigned int pad$1;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }wait_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }wait_list;  struct task_struct * owner; signed char * name; void * magic;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }mutex;  struct bus_type * bus;  struct device_driver * driver; void * platform_data;  struct dev_pm_info {  struct pm_message { signed int event; }power_state; unsigned _ExtInt(1) can_wakeup; unsigned _ExtInt(1) async_suspend; _Bool is_prepared; _Bool is_suspended; _Bool ignore_children; _Bool early_init; unsigned _ExtInt(2) bit_field_pad$7; unsigned _ExtInt(24) pad$8;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct completion { unsigned int done; unsigned int pad$1;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait; }completion;  struct wakeup_source * wakeup; _Bool wakeup_path; _Bool syscore; unsigned _ExtInt(6) bit_field_pad$14; unsigned _ExtInt(56) pad$16;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }suspend_timer; unsigned long int timer_expires;  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait_queue;  struct __anonstruct_atomic_t_6 { signed int counter; }usage_count;  struct __anonstruct_atomic_t_6 { signed int counter; }child_count; unsigned _ExtInt(3) disable_depth; unsigned _ExtInt(1) idle_notification; unsigned _ExtInt(1) request_pending; unsigned _ExtInt(1) deferred_resume; unsigned _ExtInt(1) run_wake; unsigned _ExtInt(1) runtime_auto; unsigned _ExtInt(1) no_callbacks; unsigned _ExtInt(1) irq_safe; unsigned _ExtInt(1) use_autosuspend; unsigned _ExtInt(1) timer_autosuspends; unsigned _ExtInt(1) memalloc_noio; unsigned _ExtInt(3) bit_field_pad$32; unsigned short int pad$35; signed int request; signed int runtime_status; signed int runtime_error; signed int autosuspend_delay; unsigned int pad$40; unsigned long int last_busy; unsigned long int active_jiffies; unsigned long int suspended_jiffies; unsigned long int accounting_timestamp;  struct pm_subsys_data * subsys_data;  struct dev_pm_qos * qos; }power; unsigned short int pad$10;  struct dev_pm_domain * pm_domain;  struct dev_pin_info * pins; signed int numa_node; unsigned int pad$14; unsigned long int * dma_mask; unsigned long int coherent_dma_mask;  struct device_dma_parameters * dma_parms;  struct list_head {  struct list_head * next;  struct list_head * prev; }dma_pools;  struct dma_coherent_mem * dma_mem;  struct dev_archdata {  struct dma_map_ops * dma_ops; void * iommu; }archdata;  struct device_node * of_node;  struct acpi_dev_node {  struct acpi_device * companion; }acpi_node; unsigned int devt; unsigned int id;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }devres_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }devres_head;  struct klist_node { void * n_klist;  struct list_head {  struct list_head * next;  struct list_head * prev; }n_node;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }n_ref; unsigned int pad$3; }knode_class;  struct class * class;  struct attribute_group * * groups; void (*)( struct device *);  struct iommu_group * iommu_group; _Bool offline_disabled; _Bool offline; unsigned _ExtInt(6) bit_field_pad$32; unsigned _ExtInt(56) pad$35; } *)((unsigned char *)(( struct pci_dev *)(&dynamic_9_array[0])) + 152)))

State 10 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14171 function myri10ge_probe thread 0
----------------------------------------------------
  netdev->dev.parent = (unsigned long int)(( struct device *)(( struct device {  struct device * parent;  struct device_private * p;  struct kobject { signed char * name;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct kobject * parent;  struct kset * kset;  struct kobj_type * ktype;  struct kernfs_node * sd;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }kref; unsigned int pad$7;  struct delayed_work {  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }timer;  struct workqueue_struct * wq; signed int cpu; unsigned int pad$4; }release; unsigned _ExtInt(1) state_initialized; unsigned _ExtInt(1) state_in_sysfs; unsigned _ExtInt(1) state_add_uevent_sent; unsigned _ExtInt(1) state_remove_uevent_sent; unsigned _ExtInt(1) uevent_suppress; unsigned _ExtInt(3) bit_field_pad$13; unsigned _ExtInt(56) pad$15; }kobj; signed char * init_name;  struct device_type * type;  struct mutex {  struct __anonstruct_atomic_t_6 { signed int counter; }count; unsigned int pad$1;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }wait_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }wait_list;  struct task_struct * owner; signed char * name; void * magic;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }mutex;  struct bus_type * bus;  struct device_driver * driver; void * platform_data;  struct dev_pm_info {  struct pm_message { signed int event; }power_state; unsigned _ExtInt(1) can_wakeup; unsigned _ExtInt(1) async_suspend; _Bool is_prepared; _Bool is_suspended; _Bool ignore_children; _Bool early_init; unsigned _ExtInt(2) bit_field_pad$7; unsigned _ExtInt(24) pad$8;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct completion { unsigned int done; unsigned int pad$1;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait; }completion;  struct wakeup_source * wakeup; _Bool wakeup_path; _Bool syscore; unsigned _ExtInt(6) bit_field_pad$14; unsigned _ExtInt(56) pad$16;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }suspend_timer; unsigned long int timer_expires;  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait_queue;  struct __anonstruct_atomic_t_6 { signed int counter; }usage_count;  struct __anonstruct_atomic_t_6 { signed int counter; }child_count; unsigned _ExtInt(3) disable_depth; unsigned _ExtInt(1) idle_notification; unsigned _ExtInt(1) request_pending; unsigned _ExtInt(1) deferred_resume; unsigned _ExtInt(1) run_wake; unsigned _ExtInt(1) runtime_auto; unsigned _ExtInt(1) no_callbacks; unsigned _ExtInt(1) irq_safe; unsigned _ExtInt(1) use_autosuspend; unsigned _ExtInt(1) timer_autosuspends; unsigned _ExtInt(1) memalloc_noio; unsigned _ExtInt(3) bit_field_pad$32; unsigned short int pad$35; signed int request; signed int runtime_status; signed int runtime_error; signed int autosuspend_delay; unsigned int pad$40; unsigned long int last_busy; unsigned long int active_jiffies; unsigned long int suspended_jiffies; unsigned long int accounting_timestamp;  struct pm_subsys_data * subsys_data;  struct dev_pm_qos * qos; }power; unsigned short int pad$10;  struct dev_pm_domain * pm_domain;  struct dev_pin_info * pins; signed int numa_node; unsigned int pad$14; unsigned long int * dma_mask; unsigned long int coherent_dma_mask;  struct device_dma_parameters * dma_parms;  struct list_head {  struct list_head * next;  struct list_head * prev; }dma_pools;  struct dma_coherent_mem * dma_mem;  struct dev_archdata {  struct dma_map_ops * dma_ops; void * iommu; }archdata;  struct device_node * of_node;  struct acpi_dev_node {  struct acpi_device * companion; }acpi_node; unsigned int devt; unsigned int id;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }devres_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }devres_head;  struct klist_node { void * n_klist;  struct list_head {  struct list_head * next;  struct list_head * prev; }n_node;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }n_ref; unsigned int pad$3; }knode_class;  struct class * class;  struct attribute_group * * groups; void (*)( struct device *);  struct iommu_group * iommu_group; _Bool offline_disabled; _Bool offline; unsigned _ExtInt(6) bit_field_pad$32; unsigned _ExtInt(56) pad$35; } *)((unsigned char *)(( struct pci_dev *)(&dynamic_9_array[0])) + 152)))

State 11 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14171 function myri10ge_probe thread 0
----------------------------------------------------
  netdev->dev.parent = (unsigned long int)(( struct device *)(( struct device {  struct device * parent;  struct device_private * p;  struct kobject { signed char * name;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct kobject * parent;  struct kset * kset;  struct kobj_type * ktype;  struct kernfs_node * sd;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }kref; unsigned int pad$7;  struct delayed_work {  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }timer;  struct workqueue_struct * wq; signed int cpu; unsigned int pad$4; }release; unsigned _ExtInt(1) state_initialized; unsigned _ExtInt(1) state_in_sysfs; unsigned _ExtInt(1) state_add_uevent_sent; unsigned _ExtInt(1) state_remove_uevent_sent; unsigned _ExtInt(1) uevent_suppress; unsigned _ExtInt(3) bit_field_pad$13; unsigned _ExtInt(56) pad$15; }kobj; signed char * init_name;  struct device_type * type;  struct mutex {  struct __anonstruct_atomic_t_6 { signed int counter; }count; unsigned int pad$1;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }wait_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }wait_list;  struct task_struct * owner; signed char * name; void * magic;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }mutex;  struct bus_type * bus;  struct device_driver * driver; void * platform_data;  struct dev_pm_info {  struct pm_message { signed int event; }power_state; unsigned _ExtInt(1) can_wakeup; unsigned _ExtInt(1) async_suspend; _Bool is_prepared; _Bool is_suspended; _Bool ignore_children; _Bool early_init; unsigned _ExtInt(2) bit_field_pad$7; unsigned _ExtInt(24) pad$8;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct completion { unsigned int done; unsigned int pad$1;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait; }completion;  struct wakeup_source * wakeup; _Bool wakeup_path; _Bool syscore; unsigned _ExtInt(6) bit_field_pad$14; unsigned _ExtInt(56) pad$16;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }suspend_timer; unsigned long int timer_expires;  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait_queue;  struct __anonstruct_atomic_t_6 { signed int counter; }usage_count;  struct __anonstruct_atomic_t_6 { signed int counter; }child_count; unsigned _ExtInt(3) disable_depth; unsigned _ExtInt(1) idle_notification; unsigned _ExtInt(1) request_pending; unsigned _ExtInt(1) deferred_resume; unsigned _ExtInt(1) run_wake; unsigned _ExtInt(1) runtime_auto; unsigned _ExtInt(1) no_callbacks; unsigned _ExtInt(1) irq_safe; unsigned _ExtInt(1) use_autosuspend; unsigned _ExtInt(1) timer_autosuspends; unsigned _ExtInt(1) memalloc_noio; unsigned _ExtInt(3) bit_field_pad$32; unsigned short int pad$35; signed int request; signed int runtime_status; signed int runtime_error; signed int autosuspend_delay; unsigned int pad$40; unsigned long int last_busy; unsigned long int active_jiffies; unsigned long int suspended_jiffies; unsigned long int accounting_timestamp;  struct pm_subsys_data * subsys_data;  struct dev_pm_qos * qos; }power; unsigned short int pad$10;  struct dev_pm_domain * pm_domain;  struct dev_pin_info * pins; signed int numa_node; unsigned int pad$14; unsigned long int * dma_mask; unsigned long int coherent_dma_mask;  struct device_dma_parameters * dma_parms;  struct list_head {  struct list_head * next;  struct list_head * prev; }dma_pools;  struct dma_coherent_mem * dma_mem;  struct dev_archdata {  struct dma_map_ops * dma_ops; void * iommu; }archdata;  struct device_node * of_node;  struct acpi_dev_node {  struct acpi_device * companion; }acpi_node; unsigned int devt; unsigned int id;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }devres_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }devres_head;  struct klist_node { void * n_klist;  struct list_head {  struct list_head * next;  struct list_head * prev; }n_node;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }n_ref; unsigned int pad$3; }knode_class;  struct class * class;  struct attribute_group * * groups; void (*)( struct device *);  struct iommu_group * iommu_group; _Bool offline_disabled; _Bool offline; unsigned _ExtInt(6) bit_field_pad$32; unsigned _ExtInt(56) pad$35; } *)((unsigned char *)(( struct pci_dev *)(&dynamic_9_array[0])) + 152)))

State 12 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14171 function myri10ge_probe thread 0
----------------------------------------------------
  netdev->dev.parent = (unsigned long int)(( struct device *)(( struct device {  struct device * parent;  struct device_private * p;  struct kobject { signed char * name;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct kobject * parent;  struct kset * kset;  struct kobj_type * ktype;  struct kernfs_node * sd;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }kref; unsigned int pad$7;  struct delayed_work {  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }timer;  struct workqueue_struct * wq; signed int cpu; unsigned int pad$4; }release; unsigned _ExtInt(1) state_initialized; unsigned _ExtInt(1) state_in_sysfs; unsigned _ExtInt(1) state_add_uevent_sent; unsigned _ExtInt(1) state_remove_uevent_sent; unsigned _ExtInt(1) uevent_suppress; unsigned _ExtInt(3) bit_field_pad$13; unsigned _ExtInt(56) pad$15; }kobj; signed char * init_name;  struct device_type * type;  struct mutex {  struct __anonstruct_atomic_t_6 { signed int counter; }count; unsigned int pad$1;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }wait_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }wait_list;  struct task_struct * owner; signed char * name; void * magic;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }mutex;  struct bus_type * bus;  struct device_driver * driver; void * platform_data;  struct dev_pm_info {  struct pm_message { signed int event; }power_state; unsigned _ExtInt(1) can_wakeup; unsigned _ExtInt(1) async_suspend; _Bool is_prepared; _Bool is_suspended; _Bool ignore_children; _Bool early_init; unsigned _ExtInt(2) bit_field_pad$7; unsigned _ExtInt(24) pad$8;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct completion { unsigned int done; unsigned int pad$1;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait; }completion;  struct wakeup_source * wakeup; _Bool wakeup_path; _Bool syscore; unsigned _ExtInt(6) bit_field_pad$14; unsigned _ExtInt(56) pad$16;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }suspend_timer; unsigned long int timer_expires;  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait_queue;  struct __anonstruct_atomic_t_6 { signed int counter; }usage_count;  struct __anonstruct_atomic_t_6 { signed int counter; }child_count; unsigned _ExtInt(3) disable_depth; unsigned _ExtInt(1) idle_notification; unsigned _ExtInt(1) request_pending; unsigned _ExtInt(1) deferred_resume; unsigned _ExtInt(1) run_wake; unsigned _ExtInt(1) runtime_auto; unsigned _ExtInt(1) no_callbacks; unsigned _ExtInt(1) irq_safe; unsigned _ExtInt(1) use_autosuspend; unsigned _ExtInt(1) timer_autosuspends; unsigned _ExtInt(1) memalloc_noio; unsigned _ExtInt(3) bit_field_pad$32; unsigned short int pad$35; signed int request; signed int runtime_status; signed int runtime_error; signed int autosuspend_delay; unsigned int pad$40; unsigned long int last_busy; unsigned long int active_jiffies; unsigned long int suspended_jiffies; unsigned long int accounting_timestamp;  struct pm_subsys_data * subsys_data;  struct dev_pm_qos * qos; }power; unsigned short int pad$10;  struct dev_pm_domain * pm_domain;  struct dev_pin_info * pins; signed int numa_node; unsigned int pad$14; unsigned long int * dma_mask; unsigned long int coherent_dma_mask;  struct device_dma_parameters * dma_parms;  struct list_head {  struct list_head * next;  struct list_head * prev; }dma_pools;  struct dma_coherent_mem * dma_mem;  struct dev_archdata {  struct dma_map_ops * dma_ops; void * iommu; }archdata;  struct device_node * of_node;  struct acpi_dev_node {  struct acpi_device * companion; }acpi_node; unsigned int devt; unsigned int id;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }devres_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }devres_head;  struct klist_node { void * n_klist;  struct list_head {  struct list_head * next;  struct list_head * prev; }n_node;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }n_ref; unsigned int pad$3; }knode_class;  struct class * class;  struct attribute_group * * groups; void (*)( struct device *);  struct iommu_group * iommu_group; _Bool offline_disabled; _Bool offline; unsigned _ExtInt(6) bit_field_pad$32; unsigned _ExtInt(56) pad$35; } *)((unsigned char *)(( struct pci_dev *)(&dynamic_9_array[0])) + 152)))

State 13 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14171 function myri10ge_probe thread 0
----------------------------------------------------
  netdev->dev.parent = (unsigned long int)(( struct device *)(( struct device {  struct device * parent;  struct device_private * p;  struct kobject { signed char * name;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct kobject * parent;  struct kset * kset;  struct kobj_type * ktype;  struct kernfs_node * sd;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }kref; unsigned int pad$7;  struct delayed_work {  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }timer;  struct workqueue_struct * wq; signed int cpu; unsigned int pad$4; }release; unsigned _ExtInt(1) state_initialized; unsigned _ExtInt(1) state_in_sysfs; unsigned _ExtInt(1) state_add_uevent_sent; unsigned _ExtInt(1) state_remove_uevent_sent; unsigned _ExtInt(1) uevent_suppress; unsigned _ExtInt(3) bit_field_pad$13; unsigned _ExtInt(56) pad$15; }kobj; signed char * init_name;  struct device_type * type;  struct mutex {  struct __anonstruct_atomic_t_6 { signed int counter; }count; unsigned int pad$1;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }wait_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }wait_list;  struct task_struct * owner; signed char * name; void * magic;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }mutex;  struct bus_type * bus;  struct device_driver * driver; void * platform_data;  struct dev_pm_info {  struct pm_message { signed int event; }power_state; unsigned _ExtInt(1) can_wakeup; unsigned _ExtInt(1) async_suspend; _Bool is_prepared; _Bool is_suspended; _Bool ignore_children; _Bool early_init; unsigned _ExtInt(2) bit_field_pad$7; unsigned _ExtInt(24) pad$8;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct completion { unsigned int done; unsigned int pad$1;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait; }completion;  struct wakeup_source * wakeup; _Bool wakeup_path; _Bool syscore; unsigned _ExtInt(6) bit_field_pad$14; unsigned _ExtInt(56) pad$16;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }suspend_timer; unsigned long int timer_expires;  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait_queue;  struct __anonstruct_atomic_t_6 { signed int counter; }usage_count;  struct __anonstruct_atomic_t_6 { signed int counter; }child_count; unsigned _ExtInt(3) disable_depth; unsigned _ExtInt(1) idle_notification; unsigned _ExtInt(1) request_pending; unsigned _ExtInt(1) deferred_resume; unsigned _ExtInt(1) run_wake; unsigned _ExtInt(1) runtime_auto; unsigned _ExtInt(1) no_callbacks; unsigned _ExtInt(1) irq_safe; unsigned _ExtInt(1) use_autosuspend; unsigned _ExtInt(1) timer_autosuspends; unsigned _ExtInt(1) memalloc_noio; unsigned _ExtInt(3) bit_field_pad$32; unsigned short int pad$35; signed int request; signed int runtime_status; signed int runtime_error; signed int autosuspend_delay; unsigned int pad$40; unsigned long int last_busy; unsigned long int active_jiffies; unsigned long int suspended_jiffies; unsigned long int accounting_timestamp;  struct pm_subsys_data * subsys_data;  struct dev_pm_qos * qos; }power; unsigned short int pad$10;  struct dev_pm_domain * pm_domain;  struct dev_pin_info * pins; signed int numa_node; unsigned int pad$14; unsigned long int * dma_mask; unsigned long int coherent_dma_mask;  struct device_dma_parameters * dma_parms;  struct list_head {  struct list_head * next;  struct list_head * prev; }dma_pools;  struct dma_coherent_mem * dma_mem;  struct dev_archdata {  struct dma_map_ops * dma_ops; void * iommu; }archdata;  struct device_node * of_node;  struct acpi_dev_node {  struct acpi_device * companion; }acpi_node; unsigned int devt; unsigned int id;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }devres_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }devres_head;  struct klist_node { void * n_klist;  struct list_head {  struct list_head * next;  struct list_head * prev; }n_node;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }n_ref; unsigned int pad$3; }knode_class;  struct class * class;  struct attribute_group * * groups; void (*)( struct device *);  struct iommu_group * iommu_group; _Bool offline_disabled; _Bool offline; unsigned _ExtInt(6) bit_field_pad$32; unsigned _ExtInt(56) pad$35; } *)((unsigned char *)(( struct pci_dev *)(&dynamic_9_array[0])) + 152)))

State 14 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14171 function myri10ge_probe thread 0
----------------------------------------------------
  netdev->dev.parent = (unsigned long int)(( struct device *)(( struct device {  struct device * parent;  struct device_private * p;  struct kobject { signed char * name;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct kobject * parent;  struct kset * kset;  struct kobj_type * ktype;  struct kernfs_node * sd;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }kref; unsigned int pad$7;  struct delayed_work {  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }timer;  struct workqueue_struct * wq; signed int cpu; unsigned int pad$4; }release; unsigned _ExtInt(1) state_initialized; unsigned _ExtInt(1) state_in_sysfs; unsigned _ExtInt(1) state_add_uevent_sent; unsigned _ExtInt(1) state_remove_uevent_sent; unsigned _ExtInt(1) uevent_suppress; unsigned _ExtInt(3) bit_field_pad$13; unsigned _ExtInt(56) pad$15; }kobj; signed char * init_name;  struct device_type * type;  struct mutex {  struct __anonstruct_atomic_t_6 { signed int counter; }count; unsigned int pad$1;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }wait_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }wait_list;  struct task_struct * owner; signed char * name; void * magic;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }mutex;  struct bus_type * bus;  struct device_driver * driver; void * platform_data;  struct dev_pm_info {  struct pm_message { signed int event; }power_state; unsigned _ExtInt(1) can_wakeup; unsigned _ExtInt(1) async_suspend; _Bool is_prepared; _Bool is_suspended; _Bool ignore_children; _Bool early_init; unsigned _ExtInt(2) bit_field_pad$7; unsigned _ExtInt(24) pad$8;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry;  struct completion { unsigned int done; unsigned int pad$1;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait; }completion;  struct wakeup_source * wakeup; _Bool wakeup_path; _Bool syscore; unsigned _ExtInt(6) bit_field_pad$14; unsigned _ExtInt(56) pad$16;  struct timer_list {  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; unsigned long int expires;  struct tvec_base * base; void (*)(unsigned long int); unsigned long int data; signed int slack; signed int start_pid; void * start_site; signed char [16] start_comm;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }suspend_timer; unsigned long int timer_expires;  struct work_struct {  struct __anonstruct_atomic64_t_7 { signed long int counter; }data;  struct list_head {  struct list_head * next;  struct list_head * prev; }entry; void (*)( struct work_struct *);  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }lockdep_map; }work;  struct __wait_queue_head {  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }task_list; }wait_queue;  struct __anonstruct_atomic_t_6 { signed int counter; }usage_count;  struct __anonstruct_atomic_t_6 { signed int counter; }child_count; unsigned _ExtInt(3) disable_depth; unsigned _ExtInt(1) idle_notification; unsigned _ExtInt(1) request_pending; unsigned _ExtInt(1) deferred_resume; unsigned _ExtInt(1) run_wake; unsigned _ExtInt(1) runtime_auto; unsigned _ExtInt(1) no_callbacks; unsigned _ExtInt(1) irq_safe; unsigned _ExtInt(1) use_autosuspend; unsigned _ExtInt(1) timer_autosuspends; unsigned _ExtInt(1) memalloc_noio; unsigned _ExtInt(3) bit_field_pad$32; unsigned short int pad$35; signed int request; signed int runtime_status; signed int runtime_error; signed int autosuspend_delay; unsigned int pad$40; unsigned long int last_busy; unsigned long int active_jiffies; unsigned long int suspended_jiffies; unsigned long int accounting_timestamp;  struct pm_subsys_data * subsys_data;  struct dev_pm_qos * qos; }power; unsigned short int pad$10;  struct dev_pm_domain * pm_domain;  struct dev_pin_info * pins; signed int numa_node; unsigned int pad$14; unsigned long int * dma_mask; unsigned long int coherent_dma_mask;  struct device_dma_parameters * dma_parms;  struct list_head {  struct list_head * next;  struct list_head * prev; }dma_pools;  struct dma_coherent_mem * dma_mem;  struct dev_archdata {  struct dma_map_ops * dma_ops; void * iommu; }archdata;  struct device_node * of_node;  struct acpi_dev_node {  struct acpi_device * companion; }acpi_node; unsigned int devt; unsigned int id;  struct spinlock {  union __anonunion____missing_field_name_28 {  struct raw_spinlock {  struct arch_spinlock {  union __anonunion____missing_field_name_8 { unsigned int head_tail;  struct __raw_tickets { unsigned short int head; unsigned short int tail; }tickets; } __annonCompField4; }raw_lock; unsigned int magic; unsigned int owner_cpu; unsigned int pad$3; void * owner;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }rlock;  struct __anonstruct____missing_field_name_29 { unsigned char [24] __padding;  struct lockdep_map {  struct lock_class_key * key;  struct lock_class * [2] class_cache; signed char * name; signed int cpu; unsigned int pad$4; unsigned long int ip; }dep_map; }__annonCompField18; } __annonCompField19; }devres_lock;  struct list_head {  struct list_head * next;  struct list_head * prev; }devres_head;  struct klist_node { void * n_klist;  struct list_head {  struct list_head * next;  struct list_head * prev; }n_node;  struct kref {  struct __anonstruct_atomic_t_6 { signed int counter; }refcount; }n_ref; unsigned int pad$3; }knode_class;  struct class * class;  struct attribute_group * * groups; void (*)( struct device *);  struct iommu_group * iommu_group; _Bool offline_disabled; _Bool offline; unsigned _ExtInt(6) bit_field_pad$32; unsigned _ExtInt(56) pad$35; } *)((unsigned char *)(( struct pci_dev *)(&dynamic_9_array[0])) + 152)))

State 15 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14174 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->dev = (unsigned long int)(&dynamic_15_array[0])

State 16 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14174 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->dev = (unsigned long int)(&dynamic_15_array[0])

State 17 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14174 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->dev = (unsigned long int)(&dynamic_15_array[0])

State 18 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14174 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->dev = (unsigned long int)(&dynamic_15_array[0])

State 19 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14174 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->dev = (unsigned long int)(&dynamic_15_array[0])

State 20 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14174 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->dev = (unsigned long int)(&dynamic_15_array[0])

State 21 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14174 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->dev = (unsigned long int)(&dynamic_15_array[0])

State 22 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14174 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->dev = (unsigned long int)(&dynamic_15_array[0])

State 23 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14175 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pdev = (unsigned long int)(( struct pci_dev *)(&dynamic_9_array[0]))

State 24 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14175 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pdev = (unsigned long int)(( struct pci_dev *)(&dynamic_9_array[0]))

State 25 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14175 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pdev = (unsigned long int)(( struct pci_dev *)(&dynamic_9_array[0]))

State 26 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14175 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pdev = (unsigned long int)(( struct pci_dev *)(&dynamic_9_array[0]))

State 27 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14175 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pdev = (unsigned long int)(( struct pci_dev *)(&dynamic_9_array[0]))

State 28 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14175 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pdev = (unsigned long int)(( struct pci_dev *)(&dynamic_9_array[0]))

State 29 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14175 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pdev = (unsigned long int)(( struct pci_dev *)(&dynamic_9_array[0]))

State 30 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14175 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pdev = (unsigned long int)(( struct pci_dev *)(&dynamic_9_array[0]))

State 31 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14176 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pause = 1 (00000000 00000000 00000000 00000001)

State 32 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14176 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pause = 1 (00000000 00000000 00000000 00000001)

State 33 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14176 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pause = 1 (00000000 00000000 00000000 00000001)

State 34 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14176 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->pause = 1 (00000000 00000000 00000000 00000001)

State 35 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14177 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->intr_coal_delay = 75 (00000000 00000000 00000000 01001011)

State 36 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14177 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->intr_coal_delay = 75 (00000000 00000000 00000000 01001011)

State 37 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14177 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->intr_coal_delay = 75 (00000000 00000000 00000000 01001011)

State 38 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14177 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->intr_coal_delay = 75 (00000000 00000000 00000000 01001011)

State 39 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14179 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->board_number = 0 (00000000 00000000 00000000 00000000)

State 40 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14179 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->board_number = 0 (00000000 00000000 00000000 00000000)

State 41 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14179 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->board_number = 0 (00000000 00000000 00000000 00000000)

State 42 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14179 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->board_number = 0 (00000000 00000000 00000000 00000000)

State 43 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14228 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->cmd = (unsigned long int)(( struct mcp_cmd_response *)INVALID12)

State 44 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14228 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->cmd = (unsigned long int)(( struct mcp_cmd_response *)INVALID12)

State 45 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14228 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->cmd = (unsigned long int)(( struct mcp_cmd_response *)INVALID12)

State 46 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14228 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->cmd = (unsigned long int)(( struct mcp_cmd_response *)INVALID12)

State 47 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14228 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->cmd = (unsigned long int)(( struct mcp_cmd_response *)INVALID12)

State 48 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14228 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->cmd = (unsigned long int)(( struct mcp_cmd_response *)INVALID12)

State 49 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14228 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->cmd = (unsigned long int)(( struct mcp_cmd_response *)INVALID12)

State 50 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14228 function myri10ge_probe thread 0
----------------------------------------------------
  mgp->cmd = (unsigned long int)(( struct mcp_cmd_response *)INVALID12)

State 51 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 16896 function ldv_undef_int thread 0
----------------------------------------------------
  tmp = -2147483648 (10000000 00000000 00000000 00000000)

State 52 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 16896 function ldv_undef_int thread 0
----------------------------------------------------
  tmp = 3 (00000000 00000000 00000000 00000011)

State 53 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 14457 function myri10ge_remove thread 0
----------------------------------------------------
  mgp = ( struct myri10ge_priv *)0

State 54 file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 6353 function arch_local_save_flags thread 0
----------------------------------------------------
Violated property:
  file linux-3.14_linux-alloc-spinlock_drivers-net-ethernet-myricom-myri10ge-myri10ge.cil.i line 6353 function arch_local_save_flags
  assertion
  0


VERIFICATION FAILED

Bug found (k = 1)


FALSE_REACH
