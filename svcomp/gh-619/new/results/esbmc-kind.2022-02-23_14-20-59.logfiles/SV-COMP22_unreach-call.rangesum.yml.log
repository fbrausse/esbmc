./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/reducercommutativity/rangesum.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/reducercommutativity/rangesum.i --32 --witness-output rangesum.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --goto-unwind --unlimited-goto-unwind --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/reducercommutativity/rangesum.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.142s
GOTO program processing time: 0.001s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Symex completed in: 0.004s (87 assignments)
Slicing time: 0.000s (removed 74 assignments)
Generated 0 VCC(s), 0 remaining after simplification (13 assignments)
BMC program time: 0.004s
No bug has been found in the base case
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Symex completed in: 0.003s (87 assignments)
Slicing time: 0.001s (removed 74 assignments)
Generated 5 VCC(s), 5 remaining after simplification (13 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.001s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.001s
Runtime decision procedure: 0.010s
The forward condition is unable to prove the property
*** Checking base case, k = 6
Starting Bounded Model Checking
Unwinding loop 1  iteration  1   file rangesum.i line 18 function init_nondet
Unwinding loop 1  iteration  2   file rangesum.i line 18 function init_nondet
Unwinding loop 1  iteration  3   file rangesum.i line 18 function init_nondet
Unwinding loop 1  iteration  4   file rangesum.i line 18 function init_nondet
Unwinding loop 1  iteration  5   file rangesum.i line 18 function init_nondet
Not unwinding 
Unwinding loop 2  iteration  1   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  2   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  3   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  4   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  5   file rangesum.i line 29 function rangesum
Not unwinding 
Unwinding loop 2  iteration  1   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  2   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  3   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  4   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  5   file rangesum.i line 29 function rangesum
Not unwinding 
Unwinding loop 3  iteration  1   file rangesum.i line 57 function main
Unwinding loop 3  iteration  2   file rangesum.i line 57 function main
Unwinding loop 3  iteration  3   file rangesum.i line 57 function main
Unwinding loop 3  iteration  4   file rangesum.i line 57 function main
Unwinding loop 3  iteration  5   file rangesum.i line 57 function main
Not unwinding 
Unwinding loop 2  iteration  1   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  2   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  3   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  4   file rangesum.i line 29 function rangesum
Unwinding loop 2  iteration  5   file rangesum.i line 29 function rangesum
Not unwinding 
Symex completed in: 0.017s (300 assignments)
Slicing time: 0.001s (removed 117 assignments)
Generated 1 VCC(s), 1 remaining after simplification (183 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.003s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.003s
Runtime decision procedure: 0.526s
Building error trace

Counterexample:

State 1 file rangesum.i line 43 function main thread 0
----------------------------------------------------
  N = 5 (00000000 00000000 00000000 00000101)

State 2 file rangesum.i line 19 function init_nondet thread 0
----------------------------------------------------
  *(x + i) = 0 (00000000 00000000 00000000 00000000)

State 3 file rangesum.i line 19 function init_nondet thread 0
----------------------------------------------------
  *(x + i) = -1904212848 (10001110 10000000 00000100 10010000)

State 4 file rangesum.i line 19 function init_nondet thread 0
----------------------------------------------------
  *(x + i) = 4096 (00000000 00000000 00010000 00000000)

State 5 file rangesum.i line 19 function init_nondet thread 0
----------------------------------------------------
  *(x + i) = 159384315 (00001001 10000000 00000010 11111011)

State 6 file rangesum.i line 19 function init_nondet thread 0
----------------------------------------------------
  *(x + i) = -637534203 (11011010 00000000 00000000 00000101)

State 7 file rangesum.i line 31 function rangesum thread 0
----------------------------------------------------
  ret = 159384315 (00000000 00000000 00000000 00000000 00001001 10000000 00000010 11111011)

State 8 file rangesum.i line 32 function rangesum thread 0
----------------------------------------------------
  cnt = 1 (00000000 00000000 00000000 00000001)

State 9 file rangesum.i line 31 function rangesum thread 0
----------------------------------------------------
  ret = -478149888 (11111111 11111111 11111111 11111111 11100011 10000000 00000011 00000000)

State 10 file rangesum.i line 32 function rangesum thread 0
----------------------------------------------------
  cnt = 2 (00000000 00000000 00000000 00000010)

State 11 file rangesum.i line 54 function main thread 0
----------------------------------------------------
  temp = 0 (00000000 00000000 00000000 00000000)

State 12 file rangesum.i line 54 function main thread 0
----------------------------------------------------
  x[0] = -1904212848 (10001110 10000000 00000100 10010000)

State 13 file rangesum.i line 54 function main thread 0
----------------------------------------------------
  x[1] = 0 (00000000 00000000 00000000 00000000)

State 14 file rangesum.i line 31 function rangesum thread 0
----------------------------------------------------
  ret = 159384315 (00000000 00000000 00000000 00000000 00001001 10000000 00000010 11111011)

State 15 file rangesum.i line 32 function rangesum thread 0
----------------------------------------------------
  cnt = 1 (00000000 00000000 00000000 00000001)

State 16 file rangesum.i line 31 function rangesum thread 0
----------------------------------------------------
  ret = -478149888 (11111111 11111111 11111111 11111111 11100011 10000000 00000011 00000000)

State 17 file rangesum.i line 32 function rangesum thread 0
----------------------------------------------------
  cnt = 2 (00000000 00000000 00000000 00000010)

State 18 file rangesum.i line 56 function main thread 0
----------------------------------------------------
  temp = -1904212848 (10001110 10000000 00000100 10010000)

State 19 file rangesum.i line 58 function main thread 0
----------------------------------------------------
  x[0] = 0 (00000000 00000000 00000000 00000000)

State 20 file rangesum.i line 58 function main thread 0
----------------------------------------------------
  x[1] = 4096 (00000000 00000000 00010000 00000000)

State 21 file rangesum.i line 58 function main thread 0
----------------------------------------------------
  x[2] = 159384315 (00001001 10000000 00000010 11111011)

State 22 file rangesum.i line 58 function main thread 0
----------------------------------------------------
  x[3] = -637534203 (11011010 00000000 00000000 00000101)

State 23 file rangesum.i line 60 function main thread 0
----------------------------------------------------
  x[4] = -1904212848 (10001110 10000000 00000100 10010000)

State 24 file rangesum.i line 31 function rangesum thread 0
----------------------------------------------------
  ret = -637534203 (11111111 11111111 11111111 11111111 11011010 00000000 00000000 00000101)

State 25 file rangesum.i line 32 function rangesum thread 0
----------------------------------------------------
  cnt = 1 (00000000 00000000 00000000 00000001)

State 26 file rangesum.i line 31 function rangesum thread 0
----------------------------------------------------
  ret = -2541747051 (11111111 11111111 11111111 11111111 01101000 10000000 00000100 10010101)

State 27 file rangesum.i line 32 function rangesum thread 0
----------------------------------------------------
  cnt = 2 (00000000 00000000 00000000 00000010)

State 28 file rangesum.i line 12 function reach_error thread 0
----------------------------------------------------
Violated property:
  file rangesum.i line 12 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 6)


FALSE_REACH
