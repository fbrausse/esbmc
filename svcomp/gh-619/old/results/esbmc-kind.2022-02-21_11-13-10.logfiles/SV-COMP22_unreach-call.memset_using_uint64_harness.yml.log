./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 64 ../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i --64 --witness-output memset_using_uint64_harness.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --goto-unwind --unlimited-goto-unwind --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 64-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.226s
GOTO program processing time: 0.010s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Symex completed in: 0.006s (106 assignments)
Slicing time: 0.001s (removed 44 assignments)
Generated 3 VCC(s), 3 remaining after simplification (62 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.004s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.004s
Runtime decision procedure: 0.002s
BMC program time: 0.013s
No bug has been found in the base case
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Symex completed in: 0.007s (103 assignments)
Slicing time: 0.000s (removed 44 assignments)
Generated 2 VCC(s), 2 remaining after simplification (59 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.004s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.004s
Runtime decision procedure: 0.069s
The forward condition is unable to prove the property
*** Checking base case, k = 6
Starting Bounded Model Checking
Unwinding loop 26  iteration  1   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  2   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  3   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  4   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  5   file memset_using_uint64_harness.i line 5873 function memset_impl
Not unwinding 
Unwinding loop 27  iteration  1   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  2   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  3   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  4   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  5   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Not unwinding 
Symex completed in: 0.019s (191 assignments)
Slicing time: 0.002s (removed 54 assignments)
Generated 3 VCC(s), 3 remaining after simplification (137 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.006s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.006s
Runtime decision procedure: 1.832s
BMC program time: 1.859s
No bug has been found in the base case
*** Checking forward condition, k = 6
Starting Bounded Model Checking
Unwinding loop 26  iteration  1   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  2   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  3   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  4   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  5   file memset_using_uint64_harness.i line 5873 function memset_impl
Not unwinding 
Unwinding loop 27  iteration  1   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  2   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  3   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  4   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  5   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Not unwinding 
Symex completed in: 0.020s (188 assignments)
Slicing time: 0.002s (removed 54 assignments)
Generated 2 VCC(s), 2 remaining after simplification (134 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.006s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.006s
Runtime decision procedure: 0.085s
The forward condition is unable to prove the property
*** Checking base case, k = 11
Starting Bounded Model Checking
Unwinding loop 26  iteration  1   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  2   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  3   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  4   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  5   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  6   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  7   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  8   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  9   file memset_using_uint64_harness.i line 5873 function memset_impl
Unwinding loop 26  iteration  10   file memset_using_uint64_harness.i line 5873 function memset_impl
Not unwinding 
Unwinding loop 27  iteration  1   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  2   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  3   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  4   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  5   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  6   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  7   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  8   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  9   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Unwinding loop 27  iteration  10   file memset_using_uint64_harness.i line 5921 function memset_using_uint64_impl
Not unwinding 
Symex completed in: 0.032s (276 assignments)
Slicing time: 0.004s (removed 74 assignments)
Generated 3 VCC(s), 3 remaining after simplification (202 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.007s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.007s
Runtime decision procedure: 2.619s
Building error trace

Counterexample:

State 1 file memset_using_uint64_harness.i line 5939 function memset_using_uint64_harness thread 0
----------------------------------------------------
  c = 0 (00000000 00000000 00000000 00000000)

State 2 file memset_using_uint64_harness.i line 5940 function memset_using_uint64_harness thread 0
----------------------------------------------------
  size = 9 (00000000 00000000 00000000 00001001)

State 3 file memset_using_uint64_harness.i line 5874 function memset_impl thread 0
----------------------------------------------------
  *(sp + (signed long int)i) = byte_update_little_endian({ 0, 128, 256, 0, 0, 5690, -11728, 17275, -190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 0, 0)

State 4 file memset_using_uint64_harness.i line 5874 function memset_impl thread 0
----------------------------------------------------
  *(sp + (signed long int)i) = byte_update_little_endian({ 0, 128, 256, 0, 0, 5690, -11728, 17275, -190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 1, 0)

State 5 file memset_using_uint64_harness.i line 5874 function memset_impl thread 0
----------------------------------------------------
  *(sp + (signed long int)i) = byte_update_little_endian({ 0, 128, 256, 0, 0, 5690, -11728, 17275, -190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 2, 0)

State 6 file memset_using_uint64_harness.i line 5874 function memset_impl thread 0
----------------------------------------------------
  *(sp + (signed long int)i) = byte_update_little_endian({ 0, 0, 256, 0, 0, 5690, -11728, 17275, -190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 3, 0)

State 7 file memset_using_uint64_harness.i line 5874 function memset_impl thread 0
----------------------------------------------------
  *(sp + (signed long int)i) = byte_update_little_endian({ 0, 0, 256, 0, 0, 5690, -11728, 17275, -190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 4, 0)

State 8 file memset_using_uint64_harness.i line 5874 function memset_impl thread 0
----------------------------------------------------
  *(sp + (signed long int)i) = byte_update_little_endian({ 0, 0, 256, 0, 0, 5690, -11728, 17275, -190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 5, 0)

State 9 file memset_using_uint64_harness.i line 5874 function memset_impl thread 0
----------------------------------------------------
  *(sp + (signed long int)i) = byte_update_little_endian({ 0, 0, 0, 0, 0, 5690, -11728, 17275, -190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 6, 0)

State 10 file memset_using_uint64_harness.i line 5874 function memset_impl thread 0
----------------------------------------------------
  *(sp + (signed long int)i) = byte_update_little_endian({ 0, 0, 0, 0, 0, 5690, -11728, 17275, -190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 7, 0)

State 11 file memset_using_uint64_harness.i line 5874 function memset_impl thread 0
----------------------------------------------------
  *(sp + (signed long int)i) = byte_update_little_endian({ 0, 0, 0, 0, 0, 5690, -11728, 17275, -190, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 8, 0)

State 12 file memset_using_uint64_harness.i line 5883 function memset_using_uint64_impl thread 0
----------------------------------------------------
  num_uint64s = 1 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001)

State 13 file memset_using_uint64_harness.i line 5884 function memset_using_uint64_impl thread 0
----------------------------------------------------
  rem = 1 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001)

State 14 file memset_using_uint64_harness.i line 5903 function memset_using_uint64_impl thread 0
----------------------------------------------------
  *(d + 0) = byte_update_little_endian({ 0, 0, 0, 0, 8, 0, 0, -32513, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2303, 4096, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 0, 0)

State 15 file memset_using_uint64_harness.i line 5906 function memset_using_uint64_impl thread 0
----------------------------------------------------
  d = (void *)(&d2[0]) + 1

State 16 file memset_using_uint64_harness.i line 5922 function memset_using_uint64_impl thread 0
----------------------------------------------------
  *((unsigned long int *)d + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 17 file memset_using_uint64_harness.i line 5922 function memset_using_uint64_impl thread 0
----------------------------------------------------
  *((unsigned long int *)d + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 18 file memset_using_uint64_harness.i line 5922 function memset_using_uint64_impl thread 0
----------------------------------------------------
  *((unsigned long int *)d + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 19 file memset_using_uint64_harness.i line 5922 function memset_using_uint64_impl thread 0
----------------------------------------------------
  *((unsigned long int *)d + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 20 file memset_using_uint64_harness.i line 5922 function memset_using_uint64_impl thread 0
----------------------------------------------------
  *((unsigned long int *)d + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 21 file memset_using_uint64_harness.i line 5922 function memset_using_uint64_impl thread 0
----------------------------------------------------
  *((unsigned long int *)d + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 22 file memset_using_uint64_harness.i line 5922 function memset_using_uint64_impl thread 0
----------------------------------------------------
  *((unsigned long int *)d + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 23 file memset_using_uint64_harness.i line 5922 function memset_using_uint64_impl thread 0
----------------------------------------------------
  *((unsigned long int *)d + (signed long int)i) = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 24 file memset_using_uint64_harness.i line 5660 function assert_bytes_match thread 0
----------------------------------------------------
  i = 7 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000111)

State 25 file memset_using_uint64_harness.i line 5672 function assert_all_bytes_are thread 0
----------------------------------------------------
  i = 8 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00001000)

State 26 file memset_using_uint64_harness.i line 208 function reach_error thread 0
----------------------------------------------------
Violated property:
  file memset_using_uint64_harness.i line 208 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 11)

../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:1632:45: warning: attribute declaration must precede definition [-Wignored-attributes]
extern void my_abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
                                            ^
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:232:6: note: previous definition is here
void my_abort(void) {
     ^
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5167:12: warning: implicit declaration of function '__ESBMC_atomic_load' is invalid in C99 [-Wimplicit-function-declaration]
    return __atomic_load_n(&(*(aws_atomic_impl_int_t *)(var)), aws_atomic_priv_xlate_order(memory_order));
           ^
esbmc_intrinsics.h:103:5: note: expanded from here
    __ESBMC_atomic_load(__atomic_load_ptr, &__atomic_load_tmp, (MO));          \
    ^
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5175:12: warning: implicit declaration of function '__ESBMC_atomic_load' is invalid in C99 [-Wimplicit-function-declaration]
    return __atomic_load_n(&((var)->value), aws_atomic_priv_xlate_order(memory_order));
           ^
esbmc_intrinsics.h:103:5: note: expanded from here
    __ESBMC_atomic_load(__atomic_load_ptr, &__atomic_load_tmp, (MO));          \
    ^
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5183:5: warning: implicit declaration of function '__ESBMC_atomic_store' is invalid in C99 [-Wimplicit-function-declaration]
    __atomic_store_n(&(*(aws_atomic_impl_int_t *)(var)), n, aws_atomic_priv_xlate_order(memory_order));
    ^
esbmc_intrinsics.h:111:5: note: expanded from here
    __ESBMC_atomic_store(__atomic_store_ptr, &__atomic_store_tmp, (MO));       \
    ^
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5191:5: warning: implicit declaration of function '__ESBMC_atomic_store' is invalid in C99 [-Wimplicit-function-declaration]
    __atomic_store_n(&((var)->value), p, aws_atomic_priv_xlate_order(memory_order));
    ^
esbmc_intrinsics.h:111:5: note: expanded from here
    __ESBMC_atomic_store(__atomic_store_ptr, &__atomic_store_tmp, (MO));       \
    ^
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5944:24: warning: incompatible pointer types passing 'short [160]' to parameter of type 'const uint8_t *' (aka 'const unsigned char *') [-Wincompatible-pointer-types]
    assert_bytes_match(d1, d2, size);
                       ^~
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5653:46: note: passing argument to parameter 'a' here
void assert_bytes_match(const uint8_t *const a, const uint8_t *const b, const size_t len) {
                                             ^
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5944:28: warning: incompatible pointer types passing 'short [160]' to parameter of type 'const uint8_t *' (aka 'const unsigned char *') [-Wincompatible-pointer-types]
    assert_bytes_match(d1, d2, size);
                           ^~
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5653:70: note: passing argument to parameter 'b' here
void assert_bytes_match(const uint8_t *const a, const uint8_t *const b, const size_t len) {
                                                                     ^
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5945:26: warning: incompatible pointer types passing 'short [160]' to parameter of type 'const uint8_t *' (aka 'const unsigned char *') [-Wincompatible-pointer-types]
    assert_all_bytes_are(d2, c, size);
                         ^~
../sv-benchmarks/c/aws-c-common/memset_using_uint64_harness.i:5668:48: note: passing argument to parameter 'a' here
void assert_all_bytes_are(const uint8_t *const a, const uint8_t c, const size_t len) {
                                               ^

FALSE_REACH
