./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/no-overflow.prp -s kinduction --arch 32 ../sv-benchmarks/c/recursive/Addition02WithOverflowBug.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/recursive/Addition02WithOverflowBug.c --32 --witness-output Addition02WithOverflowBug.c.graphml --no-pointer-check --no-bounds-check --overflow-check --no-assertions --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/recursive/Addition02WithOverflowBug.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.092s
GOTO program processing time: 0.001s
*** Checking base case, k = 1
Starting Bounded Model Checking
Unwinding recursion addition iteration 1 (1 max)
Unwinding recursion addition iteration 1 (1 max)
Symex completed in: 0.001s (38 assignments)
Slicing time: 0.000s (removed 11 assignments)
Generated 5 VCC(s), 5 remaining after simplification (27 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.001s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.001s
Runtime decision procedure: 0.022s
Building error trace

Counterexample:

State 1 file Addition02WithOverflowBug.c line 29 function main thread 0
----------------------------------------------------
  m = 2147483647 (01111111 11111111 11111111 11111111)

State 2 file Addition02WithOverflowBug.c line 30 function main thread 0
----------------------------------------------------
  n = 1073741824 (01000000 00000000 00000000 00000000)

State 3 file Addition02WithOverflowBug.c line 20 function addition thread 0
----------------------------------------------------
Violated property:
  file Addition02WithOverflowBug.c line 20 function addition
  arithmetic overflow on add
  !overflow("+", m, 1)


VERIFICATION FAILED

Bug found (k = 1)

../sv-benchmarks/c/recursive/Addition02WithOverflowBug.c:25:1: warning: non-void function does not return a value in all control paths [-Wreturn-type]
}
^

FALSE_OVERFLOW
