./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/ldv-regression/test24-2.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/ldv-regression/test24-2.c --32 --witness-output test24-2.c.graphml --no-pointer-check --no-bounds-check --interval-analysis --goto-unwind --unlimited-goto-unwind --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/ldv-regression/test24-2.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.090s
GOTO program processing time: 0.001s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.005s (93 assignments)
Slicing time: 0.000s (removed 39 assignments)
Generated 1 VCC(s), 1 remaining after simplification (54 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.015s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.015s
Runtime decision procedure: 0.229s
Building error trace

Counterexample:

State 1 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 2 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 3 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 2147483617 (01111111 11111111 11111111 11100001)

State 4 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 5 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 2147483618 (01111111 11111111 11111111 11100010)

State 6 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 7 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 2147483619 (01111111 11111111 11111111 11100011)

State 8 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 9 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 2147483620 (01111111 11111111 11111111 11100100)

State 10 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 11 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 2147483621 (01111111 11111111 11111111 11100101)

State 12 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 13 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 2147483622 (01111111 11111111 11111111 11100110)

State 14 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 15 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 2147483623 (01111111 11111111 11111111 11100111)

State 16 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 17 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 2147483624 (01111111 11111111 11111111 11101000)

State 18 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 19 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 2147483625 (01111111 11111111 11111111 11101001)

State 20 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 21 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = -1 (11111111 11111111 11111111 11111111)

State 22 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = -1 (11111111 11111111 11111111 11111111)

State 23 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 24 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 25 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 26 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 27 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 28 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 29 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 30 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 31 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 32 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 33 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 34 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 35 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 36 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 37 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 38 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 39 file test24-2.c line 20 function main thread 0
----------------------------------------------------
  ad1[j].a = 0 (00000000 00000000 00000000 00000000)

State 40 file test24-2.c line 21 function main thread 0
----------------------------------------------------
  ad1[j].b = 0 (00000000 00000000 00000000 00000000)

State 41 file test24-2.c line 23 function main thread 0
----------------------------------------------------
  i = 0 (00000000 00000000 00000000 00000000)

State 42 file test24-2.c line 26 function main thread 0
----------------------------------------------------
  ad1[i].a = 0 (00000000 00000000 00000000 00000000)

State 43 file test24-2.c line 27 function main thread 0
----------------------------------------------------
  pa = &ad1[i].a

State 44 file test24-2.c line 28 function main thread 0
----------------------------------------------------
  i = ad1[(POINTER_OFFSET(( struct dummy *)(&ad1[0]) + i) * 8) / 64].a + 10

State 45 file test24-2.c line 3 function reach_error thread 0
----------------------------------------------------
Violated property:
  file test24-2.c line 3 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 1)


FALSE_REACH
