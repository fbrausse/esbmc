./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/float-benchs/sqrt_poly2.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/float-benchs/sqrt_poly2.c --32 --witness-output sqrt_poly2.c.graphml --no-pointer-check --no-bounds-check --interval-analysis --goto-unwind --unlimited-goto-unwind --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/float-benchs/sqrt_poly2.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.148s
GOTO program processing time: 0.001s
*** Checking base case, k = 1
Starting Bounded Model Checking
Symex completed in: 0.003s (39 assignments)
Slicing time: 0.000s (removed 15 assignments)
Generated 1 VCC(s), 1 remaining after simplification (24 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.025s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.025s
Runtime decision procedure: 16.195s
Building error trace

Counterexample:

State 1 file sqrt_poly2.c line 60 function main thread 0
----------------------------------------------------
  x = 1.000000e+10 (01000010 00000010 10100000 01011111 00100000 00000000 00000000 00000000)

State 2 file sqrt_poly2.c line 35 function sqrt_custom thread 0
----------------------------------------------------
  x.d = 1.000000e+10 (01000010 00000010 10100000 01011111 00100000 00000000 00000000 00000000)

State 3 file sqrt_poly2.c line 37 function sqrt_custom thread 0
----------------------------------------------------
  exp = 512 (00000000 00000000 00000010 00000000)

State 4 file sqrt_poly2.c line 38 function sqrt_custom thread 0
----------------------------------------------------
  x.i[0] = 1072693248 (00111111 11110000 00000000 00000000)

State 5 file sqrt_poly2.c line 39 function sqrt_custom thread 0
----------------------------------------------------
  r = IEEE_MUL(x.d, 5.000000e-1)

State 6 file sqrt_poly2.c line 41 function sqrt_custom thread 0
----------------------------------------------------
  r = -1.486984e+28 (11000101 11001000 00000110 00000101 01010001 00010111 11111001 10101010)

State 7 file sqrt_poly2.c line 44 function sqrt_custom thread 0
----------------------------------------------------
  exp = 513 (00000000 00000000 00000010 00000001)

State 8 file sqrt_poly2.c line 50 function sqrt_custom thread 0
----------------------------------------------------
  x.i[0] = 804257792 (00101111 11110000 00000000 00000000)

State 9 file sqrt_poly2.c line 51 function sqrt_custom thread 0
----------------------------------------------------
  r = IEEE_MUL(-1.486984e+28, x.d)

State 10 file sqrt_poly2.c line 3 function reach_error thread 0
----------------------------------------------------
Violated property:
  file sqrt_poly2.c line 3 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 1)


FALSE_REACH
