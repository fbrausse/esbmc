./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/ldv-regression/test25-1.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/ldv-regression/test25-1.c --32 --witness-output test25-1.c.graphml --no-pointer-check --no-bounds-check --interval-analysis --goto-unwind --unlimited-goto-unwind --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/ldv-regression/test25-1.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.088s
GOTO program processing time: 0.001s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.004s (61 assignments)
Slicing time: 0.000s (removed 26 assignments)
Generated 1 VCC(s), 1 remaining after simplification (35 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.004s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.004s
Runtime decision procedure: 0.168s
BMC program time: 0.177s
No bug has been found in the base case
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.004s (60 assignments)
Slicing time: 0.000s (removed 26 assignments)
Generated 1 VCC(s), 1 remaining after simplification (34 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.005s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.005s
Runtime decision procedure: 0.126s
The forward condition is unable to prove the property
*** Checking base case, k = 6
Starting Bounded Model Checking
Unwinding loop 1  iteration  1   file test25-1.c line 36 function main
Unwinding loop 1  iteration  2   file test25-1.c line 36 function main
Unwinding loop 1  iteration  3   file test25-1.c line 36 function main
Unwinding loop 1  iteration  4   file test25-1.c line 36 function main
Unwinding loop 1  iteration  5   file test25-1.c line 36 function main
Not unwinding 
Symex completed in: 0.006s (76 assignments)
Slicing time: 0.001s (removed 26 assignments)
Generated 1 VCC(s), 1 remaining after simplification (50 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.005s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.005s
Runtime decision procedure: 0.822s
BMC program time: 0.834s
No bug has been found in the base case
*** Checking forward condition, k = 6
Starting Bounded Model Checking
Unwinding loop 1  iteration  1   file test25-1.c line 36 function main
Unwinding loop 1  iteration  2   file test25-1.c line 36 function main
Unwinding loop 1  iteration  3   file test25-1.c line 36 function main
Unwinding loop 1  iteration  4   file test25-1.c line 36 function main
Unwinding loop 1  iteration  5   file test25-1.c line 36 function main
Not unwinding 
Symex completed in: 0.007s (75 assignments)
Slicing time: 0.000s (removed 26 assignments)
Generated 1 VCC(s), 1 remaining after simplification (49 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.004s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.004s
Runtime decision procedure: 0.172s
The forward condition is unable to prove the property
*** Checking base case, k = 11
Starting Bounded Model Checking
Unwinding loop 1  iteration  1   file test25-1.c line 36 function main
Unwinding loop 1  iteration  2   file test25-1.c line 36 function main
Unwinding loop 1  iteration  3   file test25-1.c line 36 function main
Unwinding loop 1  iteration  4   file test25-1.c line 36 function main
Unwinding loop 1  iteration  5   file test25-1.c line 36 function main
Unwinding loop 1  iteration  6   file test25-1.c line 36 function main
Unwinding loop 1  iteration  7   file test25-1.c line 36 function main
Unwinding loop 1  iteration  8   file test25-1.c line 36 function main
Unwinding loop 1  iteration  9   file test25-1.c line 36 function main
Unwinding loop 1  iteration  10   file test25-1.c line 36 function main
Not unwinding 
Symex completed in: 0.008s (91 assignments)
Slicing time: 0.001s (removed 26 assignments)
Generated 1 VCC(s), 1 remaining after simplification (65 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.005s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.005s
Runtime decision procedure: 0.249s
Building error trace

Counterexample:

State 1 file test25-1.c line 24 function main thread 0
----------------------------------------------------
  i = 2 (00000000 00000000 00000000 00000010)

State 2 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = 2099232 (00000000 00100000 00001000 00100000)

State 3 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 2072 (00000000 00000000 00001000 00011000)

State 4 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = 4196400 (00000000 01000000 00001000 00110000)

State 5 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 34080792 (00000010 00001000 00001000 00011000)

State 6 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = 32 (00000000 00000000 00000000 00100000)

State 7 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 2147483631 (01111111 11111111 11111111 11101111)

State 8 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = 32 (00000000 00000000 00000000 00100000)

State 9 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 2147467257 (01111111 11111111 10111111 11111001)

State 10 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = -1 (11111111 11111111 11111111 11111111)

State 11 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 2147483647 (01111111 11111111 11111111 11111111)

State 12 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = 32800 (00000000 00000000 10000000 00100000)

State 13 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 33554432 (00000010 00000000 00000000 00000000)

State 14 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = 34848 (00000000 00000000 10001000 00100000)

State 15 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 33554448 (00000010 00000000 00000000 00010000)

State 16 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = 2080 (00000000 00000000 00001000 00100000)

State 17 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 34078720 (00000010 00001000 00000000 00000000)

State 18 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = 33554720 (00000010 00000000 00000001 00100000)

State 19 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 3 (00000000 00000000 00000000 00000011)

State 20 file test25-1.c line 27 function main thread 0
----------------------------------------------------
  array[j].a = 32 (00000000 00000000 00000000 00100000)

State 21 file test25-1.c line 28 function main thread 0
----------------------------------------------------
  array[j].b = 8388608 (00000000 10000000 00000000 00000000)

State 22 file test25-1.c line 32 function main thread 0
----------------------------------------------------
  cont.array = ( struct dummy *)(&array[i])

State 23 file test25-1.c line 33 function main thread 0
----------------------------------------------------
  pa = (signed int *)((unsigned char *)cont.array + 4)

State 24 file test25-1.c line 35 function main thread 0
----------------------------------------------------
  i = array[i].b - 10

State 25 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483622 (01111111 11111111 11111111 11100110)

State 26 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483623 (01111111 11111111 11111111 11100111)

State 27 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483624 (01111111 11111111 11111111 11101000)

State 28 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483625 (01111111 11111111 11111111 11101001)

State 29 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483626 (01111111 11111111 11111111 11101010)

State 30 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483627 (01111111 11111111 11111111 11101011)

State 31 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483628 (01111111 11111111 11111111 11101100)

State 32 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483629 (01111111 11111111 11111111 11101101)

State 33 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483630 (01111111 11111111 11111111 11101110)

State 34 file test25-1.c line 37 function main thread 0
----------------------------------------------------
  i = 2147483631 (01111111 11111111 11111111 11101111)

State 35 file test25-1.c line 3 function reach_error thread 0
----------------------------------------------------
Violated property:
  file test25-1.c line 3 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 11)


FALSE_REACH
