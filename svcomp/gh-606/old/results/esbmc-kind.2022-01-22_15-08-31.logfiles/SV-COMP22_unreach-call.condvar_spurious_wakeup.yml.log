./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/pthread-divine/condvar_spurious_wakeup.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/pthread-divine/condvar_spurious_wakeup.i --32 --witness-output condvar_spurious_wakeup.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/pthread-divine/condvar_spurious_wakeup.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.181s
GOTO program processing time: 0.002s
*** Checking base case, k = 1
Starting Bounded Model Checking
WARNING: k-induction does not support concurrency yet. Disabling inductive step
Not unwinding 
Symex completed in: 0.012s (159 assignments)
Slicing time: 0.000s (removed 74 assignments)
Generated 1 VCC(s), 1 remaining after simplification (85 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.002s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.002s
Runtime decision procedure: 0.000s
BMC program time: 0.014s
*** Thread interleavings 2 ***
Not unwinding 
Symex completed in: 0.001s (71 assignments)
Slicing time: 0.000s (removed 66 assignments)
Generated 0 VCC(s), 0 remaining after simplification (5 assignments)
BMC program time: 0.001s
*** Thread interleavings 3 ***
Not unwinding 
Symex completed in: 0.002s (94 assignments)
Slicing time: 0.000s (removed 60 assignments)
Generated 0 VCC(s), 0 remaining after simplification (34 assignments)
BMC program time: 0.002s
*** Thread interleavings 4 ***
Not unwinding 
Symex completed in: 0.001s (100 assignments)
Slicing time: 0.000s (removed 65 assignments)
Generated 0 VCC(s), 0 remaining after simplification (35 assignments)
BMC program time: 0.001s
*** Thread interleavings 5 ***
Not unwinding 
Symex completed in: 0.001s (110 assignments)
Slicing time: 0.000s (removed 74 assignments)
Generated 0 VCC(s), 0 remaining after simplification (36 assignments)
BMC program time: 0.001s
*** Thread interleavings 6 ***
Not unwinding 
Symex completed in: 0.001s (111 assignments)
Slicing time: 0.000s (removed 74 assignments)
Generated 0 VCC(s), 0 remaining after simplification (37 assignments)
BMC program time: 0.001s
*** Thread interleavings 7 ***
Not unwinding 
Symex completed in: 0.000s (118 assignments)
Slicing time: 0.001s (removed 62 assignments)
Generated 0 VCC(s), 0 remaining after simplification (56 assignments)
BMC program time: 0.001s
*** Thread interleavings 8 ***
Not unwinding 
Symex completed in: 0.000s (120 assignments)
Slicing time: 0.000s (removed 63 assignments)
Generated 0 VCC(s), 0 remaining after simplification (57 assignments)
BMC program time: 0.000s
*** Thread interleavings 9 ***
Not unwinding 
Symex completed in: 0.002s (143 assignments)
Slicing time: 0.001s (removed 62 assignments)
Generated 0 VCC(s), 0 remaining after simplification (81 assignments)
BMC program time: 0.003s
*** Thread interleavings 10 ***
Not unwinding 
Symex completed in: 0.001s (152 assignments)
Slicing time: 0.000s (removed 69 assignments)
Generated 1 VCC(s), 1 remaining after simplification (83 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.001s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.001s
Runtime decision procedure: 0.015s
Building error trace

Counterexample:

State 1 file condvar_spurious_wakeup.i line 697 thread 0
----------------------------------------------------
  lock = { byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(byte_extract_little_endian(0, 0), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 1), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 0), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 1), 0) }

State 2 file condvar_spurious_wakeup.i line 698 thread 0
----------------------------------------------------
  cond = { byte_extract_little_endian(byte_extract_little_endian(0, 0), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 1), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 2), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 3), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 4), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 5), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 6), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 7), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 0), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 1), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 2), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 3), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 4), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 5), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 6), 0), 
    byte_extract_little_endian(byte_extract_little_endian(0, 7), 0), 
    byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3), byte_extract_little_endian(0, 0), byte_extract_little_endian(0, 1), byte_extract_little_endian(0, 2), byte_extract_little_endian(0, 3) }

State 16 file condvar_spurious_wakeup.i line 696 function reach_error thread 1
----------------------------------------------------
Violated property:
  file condvar_spurious_wakeup.i line 696 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 1)

../sv-benchmarks/c/pthread-divine/condvar_spurious_wakeup.i:510:12: warning: declaration of built-in function '__sigsetjmp' requires the declaration of the 'jmp_buf' type, commonly provided in the header <setjmp.h>. [-Wincomplete-setjmp-declaration]
extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask) __attribute__ ((__nothrow__));
           ^

FALSE_REACH
