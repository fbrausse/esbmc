./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 64 ../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i --64 --witness-output aws_hash_table_init_bounded_harness.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --k-induction --max-inductive-step 3 

../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i:1632:45: warning: attribute declaration must precede definition [-Wignored-attributes]
extern void my_abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
                                            ^
../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i:232:6: note: previous definition is here
void my_abort(void) {
     ^
../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i:5834:12: warning: implicit declaration of function '__ESBMC_atomic_load' is invalid in C99 [-Wimplicit-function-declaration]
    return __atomic_load_n(&(*(aws_atomic_impl_int_t *)(var)), aws_atomic_priv_xlate_order(memory_order));
           ^
esbmc_intrinsics.h:99:5: note: expanded from here
    __ESBMC_atomic_load(__atomic_load_ptr, &__atomic_load_tmp, (MO));          \
    ^
../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i:5842:12: warning: implicit declaration of function '__ESBMC_atomic_load' is invalid in C99 [-Wimplicit-function-declaration]
    return __atomic_load_n(&((var)->value), aws_atomic_priv_xlate_order(memory_order));
           ^
esbmc_intrinsics.h:99:5: note: expanded from here
    __ESBMC_atomic_load(__atomic_load_ptr, &__atomic_load_tmp, (MO));          \
    ^
../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i:5850:5: warning: implicit declaration of function '__ESBMC_atomic_store' is invalid in C99 [-Wimplicit-function-declaration]
    __atomic_store_n(&(*(aws_atomic_impl_int_t *)(var)), n, aws_atomic_priv_xlate_order(memory_order));
    ^
esbmc_intrinsics.h:107:5: note: expanded from here
    __ESBMC_atomic_store(__atomic_store_ptr, &__atomic_store_tmp, (MO));       \
    ^
../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i:5858:5: warning: implicit declaration of function '__ESBMC_atomic_store' is invalid in C99 [-Wimplicit-function-declaration]
    __atomic_store_n(&((var)->value), p, aws_atomic_priv_xlate_order(memory_order));
    ^
esbmc_intrinsics.h:107:5: note: expanded from here
    __ESBMC_atomic_store(__atomic_store_ptr, &__atomic_store_tmp, (MO));       \
    ^
../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i:10131:27: warning: incompatible pointer types passing 'struct hash_table_entry *' to parameter of type 'const uint8_t *' (aka 'const unsigned char *') [-Wincompatible-pointer-types]
        assert_all_zeroes(&impl->slots[0], impl->size * sizeof(impl->slots[0]));
                          ^~~~~~~~~~~~~~~
../sv-benchmarks/c/aws-c-common/aws_hash_table_init_bounded_harness.i:7185:45: note: passing argument to parameter 'a' here
void assert_all_zeroes(const uint8_t *const a, const size_t len) {
                                            ^
Can't construct rvalue reference to array type during dereference
(It isn't allowed by C anyway)


Unknown
