./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 64 ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i --64 --witness-output usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 64-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.826s
GOTO program processing time: 0.085s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Symex completed in: 0.178s (929 assignments)
Slicing time: 0.003s (removed 740 assignments)
Generated 9 VCC(s), 9 remaining after simplification (189 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.010s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.010s
Runtime decision procedure: 0.004s
BMC program time: 0.196s
No bug has been found in the base case
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Symex completed in: 0.191s (920 assignments)
Slicing time: 0.002s (removed 740 assignments)
Generated 6 VCC(s), 6 remaining after simplification (180 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.010s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.010s
Runtime decision procedure: 0.526s
The forward condition is unable to prove the property
*** Checking base case, k = 3
Starting Bounded Model Checking
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 5  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5837 function ems_usb_start
Unwinding loop 5  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5837 function ems_usb_start
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 7  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6118 function ems_usb_start_xmit
Unwinding loop 7  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6118 function ems_usb_start_xmit
Not unwinding 
Unwinding loop 8  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6135 function ems_usb_start_xmit
Unwinding loop 8  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6135 function ems_usb_start_xmit
Not unwinding 
Unwinding loop 9  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6432 function ems_usb_probe
Unwinding loop 9  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6432 function ems_usb_probe
Not unwinding 
Unwinding loop 10  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6641 function main
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 5  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5837 function ems_usb_start
Unwinding loop 5  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5837 function ems_usb_start
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 6  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5986 function unlink_all_urbs
Unwinding loop 6  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5986 function unlink_all_urbs
Not unwinding 
Unwinding loop 7  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6118 function ems_usb_start_xmit
Unwinding loop 7  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6118 function ems_usb_start_xmit
Not unwinding 
Unwinding loop 8  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6135 function ems_usb_start_xmit
Unwinding loop 8  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6135 function ems_usb_start_xmit
Not unwinding 
Unwinding loop 9  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6432 function ems_usb_probe
Unwinding loop 9  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6432 function ems_usb_probe
Not unwinding 
Unwinding loop 10  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6641 function main
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 5  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5837 function ems_usb_start
Unwinding loop 5  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5837 function ems_usb_start
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 4  iteration  1   file string.c line 263 function memcpy
Unwinding loop 4  iteration  2   file string.c line 263 function memcpy
Not unwinding 
Unwinding loop 6  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5986 function unlink_all_urbs
Unwinding loop 6  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5986 function unlink_all_urbs
Not unwinding 
Unwinding loop 7  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6118 function ems_usb_start_xmit
Unwinding loop 7  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6118 function ems_usb_start_xmit
Not unwinding 
Unwinding loop 8  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6135 function ems_usb_start_xmit
Unwinding loop 8  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6135 function ems_usb_start_xmit
Not unwinding 
Unwinding loop 9  iteration  1   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6432 function ems_usb_probe
Unwinding loop 9  iteration  2   file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6432 function ems_usb_probe
Not unwinding 
Not unwinding 
Symex completed in: 1.409s (4860 assignments)
Slicing time: 0.043s (removed 3611 assignments)
Generated 41 VCC(s), 41 remaining after simplification (1249 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.163s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.163s
Runtime decision procedure: 10.271s
Building error trace

Counterexample:

State 1 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6644 function main thread 0
----------------------------------------------------
  tmp___9 = -1 (11111111 11111111 11111111 11111111)

State 2 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6655 function main thread 0
----------------------------------------------------
  tmp___8 = 2 (00000000 00000000 00000000 00000010)

State 3 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6067 function ems_usb_start_xmit thread 0
----------------------------------------------------
  dev = ( struct ems_usb *)0

State 4 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 5266 function can_dropped_invalid_skb thread 0
----------------------------------------------------
  tmp___8 = 0 (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)

State 5 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6838 function usb_alloc_urb thread 0
----------------------------------------------------
  arbitrary_memory = &dynamic_100_array[0]

State 6 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6781 function usb_alloc_coherent thread 0
----------------------------------------------------
  arbitrary_memory = &dynamic_103_array[0]

State 7 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6090 function ems_usb_start_xmit thread 0
----------------------------------------------------
  buf = &dynamic_103_array[0]

State 8 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6142 function ems_usb_start_xmit thread 0
----------------------------------------------------
  context = ( struct ems_tx_urb_context *)(( struct ems_tx_urb_context {  struct ems_usb * dev; unsigned int echo_index; unsigned char dlc; unsigned _ExtInt(24) pad$3; } *)(0 + 560))

State 9 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6817 function usb_free_coherent thread 0
----------------------------------------------------
  ldv_coherent_state = 0 (00000000 00000000 00000000 00000000)

State 10 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6644 function main thread 0
----------------------------------------------------
  tmp___9 = -2147483648 (10000000 00000000 00000000 00000000)

State 11 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6655 function main thread 0
----------------------------------------------------
  tmp___8 = -2147483648 (10000000 00000000 00000000 00000000)

State 12 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 6644 function main thread 0
----------------------------------------------------
  tmp___9 = 0 (00000000 00000000 00000000 00000000)

State 13 file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 12 function reach_error thread 0
----------------------------------------------------
Violated property:
  file usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i line 12 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 3)

../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i:417:17: warning: cast to smaller integer type 'unsigned int' from 'struct lockdep_map *' [-Wpointer-to-int-cast]
   u8 __padding[(unsigned int )(& ((struct raw_spinlock *)0)->dep_map)] ;
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-net-can-usb-ems_usb.ko.cil.out.i:5135:50: warning: cast to smaller integer type 'unsigned int' from 'struct device *' [-Wpointer-to-int-cast]
  return ((struct usb_device *)((char *)__mptr - (unsigned int )(& ((struct usb_device *)0)->dev)));
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

FALSE_REACH
