./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/floats-cdfpl/sine_2.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/floats-cdfpl/sine_2.i --32 --witness-output sine_2.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/floats-cdfpl/sine_2.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.131s
GOTO program processing time: 0.001s
*** Checking base case, k = 1
Starting Bounded Model Checking
Symex completed in: 0.001s (19 assignments)
Slicing time: 0.000s (removed 9 assignments)
Generated 1 VCC(s), 1 remaining after simplification (10 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.021s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.021s
Runtime decision procedure: 41.310s
Building error trace

Counterexample:

State 1 file sine_2.i line 20 function main thread 0
----------------------------------------------------
  IN = -1.501301e+0f (10111111 11000000 00101010 10100010)

State 2 file sine_2.i line 23 function main thread 0
----------------------------------------------------
  x = -1.501301e+0f (10111111 11000000 00101010 10100010)

State 3 file sine_2.i line 25 function main thread 0
----------------------------------------------------
  result = -1.004303e+0f (10111111 10000000 10001101 00000000)

State 4 file sine_2.i line 12 function reach_error thread 0
----------------------------------------------------
Violated property:
  file sine_2.i line 12 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 1)


FALSE_REACH
