./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/termination.prp -s kinduction --arch 32 ../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c --32 --witness-output elevator_spec1_productSimulator.cil.c.graphml --no-pointer-check --no-bounds-check --no-assertions --termination --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.328s
GOTO program processing time: 0.108s
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.110s (765 assignments)
Slicing time: 0.001s (removed 742 assignments)
Generated 1 VCC(s), 1 remaining after simplification (23 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.001s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.001s
Runtime decision procedure: 0.002s
The forward condition is unable to prove the property
*** Checking forward condition, k = 3
Starting Bounded Model Checking
Unwinding loop 4  iteration  1   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  2   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Not unwinding 
Symex completed in: 0.910s (6577 assignments)
Slicing time: 0.010s (removed 6524 assignments)
Generated 1 VCC(s), 1 remaining after simplification (53 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.002s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.002s
Runtime decision procedure: 0.003s
The forward condition is unable to prove the property
*** Checking forward condition, k = 5
Starting Bounded Model Checking
Unwinding loop 4  iteration  1   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  2   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  3   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  4   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Not unwinding 
Symex completed in: 4.338s (27569 assignments)
Slicing time: 0.080s (removed 23487 assignments)
Generated 1 VCC(s), 1 remaining after simplification (4082 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.080s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.080s
Runtime decision procedure: 0.069s
The forward condition is unable to prove the property
*** Checking forward condition, k = 7
Starting Bounded Model Checking
Unwinding loop 4  iteration  1   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  2   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  3   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  4   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  5   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  6   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Not unwinding 
Symex completed in: 8.215s (48561 assignments)
Slicing time: 0.183s (removed 38527 assignments)
Generated 1 VCC(s), 1 remaining after simplification (10034 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.207s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.207s
Runtime decision procedure: 0.250s
The forward condition is unable to prove the property
*** Checking forward condition, k = 9
Starting Bounded Model Checking
Unwinding loop 4  iteration  1   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  2   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  3   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  4   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  5   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  6   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  7   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Unwinding loop 4  iteration  8   file elevator_spec1_productSimulator.cil.c line 3464 function cleanup
Not unwinding 
Symex completed in: 12.301s (69553 assignments)
Slicing time: 0.282s (removed 53567 assignments)
Generated 1 VCC(s), 1 remaining after simplification (15986 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.332s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.332s
Runtime decision procedure: 0.537s
BMC program time: 13.453s
Building successful trace

VERIFICATION SUCCESSFUL

Solution found by the forward condition; all states are reachable (k = 9

../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2869:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp6);
         ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2869:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp6);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2874:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp7);
           ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2874:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp7);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2879:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp8);
           ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2879:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp8);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2884:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp9);
         ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2884:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp9);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2888:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp11);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2888:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp11);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2893:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp12);
           ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2893:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp12);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2898:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp13);
           ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2898:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp13);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2903:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp14);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2903:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp14);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2947:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp20);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:2947:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp20);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:3004:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp26);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:3004:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp26);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:3020:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp2);
           ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_productSimulator.cil.c:3020:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp2);
           ^
           "%s", 

TRUE
