./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/float-benchs/cast_union_loose.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/float-benchs/cast_union_loose.c --32 --witness-output cast_union_loose.c.graphml --no-pointer-check --no-bounds-check --interval-analysis --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/float-benchs/cast_union_loose.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.137s
GOTO program processing time: 0.001s
*** Checking base case, k = 1
Starting Bounded Model Checking
Symex completed in: 0.005s (36 assignments)
Slicing time: 0.000s (removed 9 assignments)
Generated 1 VCC(s), 1 remaining after simplification (27 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.003s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.003s
Runtime decision procedure: 0.143s
Building error trace

Counterexample:

State 1 file cast_union_loose.c line 35 function main thread 0
----------------------------------------------------
  a = -10000 (11111111 11111111 11011000 11110000)

State 2 file cast_union_loose.c line 23 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&x))->i[0] = 1127219200 (01000011 00110000 00000000 00000000)

State 3 file cast_union_loose.c line 23 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&x))->i[0] = 1127219200 (01000011 00110000 00000000 00000000)

State 4 file cast_union_loose.c line 23 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&x))->i[0] = 1127219200 (01000011 00110000 00000000 00000000)

State 5 file cast_union_loose.c line 23 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&x))->i[0] = 1127219200 (01000011 00110000 00000000 00000000)

State 6 file cast_union_loose.c line 24 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&y))->i[0] = 1127219200 (01000011 00110000 00000000 00000000)

State 7 file cast_union_loose.c line 24 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&y))->i[0] = 1127219200 (01000011 00110000 00000000 00000000)

State 8 file cast_union_loose.c line 24 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&y))->i[0] = 1127219200 (01000011 00110000 00000000 00000000)

State 9 file cast_union_loose.c line 24 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&y))->i[0] = 1127219200 (01000011 00110000 00000000 00000000)

State 10 file cast_union_loose.c line 25 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&x))->i[1] = 2147483648 (10000000 00000000 00000000 00000000)

State 11 file cast_union_loose.c line 25 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&x))->i[1] = 2147483648 (10000000 00000000 00000000 00000000)

State 12 file cast_union_loose.c line 25 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&x))->i[1] = 2147483648 (10000000 00000000 00000000 00000000)

State 13 file cast_union_loose.c line 25 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&x))->i[1] = 2147483648 (10000000 00000000 00000000 00000000)

State 14 file cast_union_loose.c line 26 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&y))->i[1] = 2147473648 (01111111 11111111 11011000 11110000)

State 15 file cast_union_loose.c line 26 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&y))->i[1] = 2147473648 (01111111 11111111 11011000 11110000)

State 16 file cast_union_loose.c line 26 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&y))->i[1] = 2147473648 (01111111 11111111 11011000 11110000)

State 17 file cast_union_loose.c line 26 function cast thread 0
----------------------------------------------------
  (( union u { signed int [2] i; double d; } *)(&y))->i[1] = 2147473648 (01111111 11111111 11011000 11110000)

State 18 file cast_union_loose.c line 3 function reach_error thread 0
----------------------------------------------------
Violated property:
  file cast_union_loose.c line 3 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 1)


FALSE_REACH
