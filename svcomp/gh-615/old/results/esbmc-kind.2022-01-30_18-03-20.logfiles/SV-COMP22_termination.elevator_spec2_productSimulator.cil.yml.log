./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/termination.prp -s kinduction --arch 32 ../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c --32 --witness-output elevator_spec2_productSimulator.cil.c.graphml --no-pointer-check --no-bounds-check --no-assertions --termination --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.316s
GOTO program processing time: 0.103s
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.106s (745 assignments)
Slicing time: 0.001s (removed 722 assignments)
Generated 1 VCC(s), 1 remaining after simplification (23 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.001s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.001s
Runtime decision procedure: 0.003s
The forward condition is unable to prove the property
*** Checking forward condition, k = 3
Starting Bounded Model Checking
Unwinding loop 3  iteration  1   file elevator_spec2_productSimulator.cil.c line 1288 function cleanup
Unwinding loop 3  iteration  2   file elevator_spec2_productSimulator.cil.c line 1288 function cleanup
Not unwinding 
Symex completed in: 0.839s (5996 assignments)
Slicing time: 0.009s (removed 5943 assignments)
Generated 1 VCC(s), 1 remaining after simplification (53 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.002s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.002s
Runtime decision procedure: 0.002s
The forward condition is unable to prove the property
*** Checking forward condition, k = 5
Starting Bounded Model Checking
Unwinding loop 3  iteration  1   file elevator_spec2_productSimulator.cil.c line 1288 function cleanup
Unwinding loop 3  iteration  2   file elevator_spec2_productSimulator.cil.c line 1288 function cleanup
Unwinding loop 3  iteration  3   file elevator_spec2_productSimulator.cil.c line 1288 function cleanup
Unwinding loop 3  iteration  4   file elevator_spec2_productSimulator.cil.c line 1288 function cleanup
Not unwinding 
Symex completed in: 3.644s (22304 assignments)
Slicing time: 0.057s (removed 19589 assignments)
Generated 1 VCC(s), 1 remaining after simplification (2715 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.055s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.055s
Runtime decision procedure: 0.035s
BMC program time: 3.792s
Building successful trace

VERIFICATION SUCCESSFUL

Solution found by the forward condition; all states are reachable (k = 5

../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3428:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp6);
         ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3428:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp6);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3433:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp7);
           ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3433:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp7);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3438:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp8);
           ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3438:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp8);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3443:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp9);
         ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3443:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp9);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3447:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp11);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3447:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp11);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3452:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp12);
           ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3452:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp12);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3457:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp13);
           ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3457:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp13);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3462:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp14);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3462:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp14);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3506:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp20);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3506:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp20);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3563:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp26);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3563:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp26);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3579:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp2);
           ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec2_productSimulator.cil.c:3579:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp2);
           ^
           "%s", 

TRUE
