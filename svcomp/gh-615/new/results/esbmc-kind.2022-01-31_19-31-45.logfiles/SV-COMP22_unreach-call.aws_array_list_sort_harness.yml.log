./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 64 ../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i --64 --witness-output aws_array_list_sort_harness.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 64-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.463s
GOTO program processing time: 0.025s
*** Checking base case, k = 1
Starting Bounded Model Checking
Symex completed in: 0.138s (345 assignments)
Slicing time: 0.002s (removed 135 assignments)
Generated 9 VCC(s), 9 remaining after simplification (210 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.008s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.008s
Runtime decision procedure: 0.013s
BMC program time: 0.162s
No bug has been found in the base case
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Symex completed in: 0.035s (336 assignments)
Slicing time: 0.002s (removed 135 assignments)
Generated 0 VCC(s), 0 remaining after simplification (201 assignments)
BMC program time: 0.037s
Building successful trace

VERIFICATION SUCCESSFUL

Solution found by the forward condition; all states are reachable (k = 1

../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:1633:45: warning: attribute declaration must precede definition [-Wignored-attributes]
extern void my_abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));
                                            ^
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:233:6: note: previous definition is here
void my_abort(void) {
     ^
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:6159:12: warning: implicit declaration of function '__ESBMC_atomic_load' is invalid in C99 [-Wimplicit-function-declaration]
    return __atomic_load_n(&(*(aws_atomic_impl_int_t *)(var)), aws_atomic_priv_xlate_order(memory_order));
           ^
esbmc_intrinsics.h:99:5: note: expanded from here
    __ESBMC_atomic_load(__atomic_load_ptr, &__atomic_load_tmp, (MO));          \
    ^
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:6167:12: warning: implicit declaration of function '__ESBMC_atomic_load' is invalid in C99 [-Wimplicit-function-declaration]
    return __atomic_load_n(&((var)->value), aws_atomic_priv_xlate_order(memory_order));
           ^
esbmc_intrinsics.h:99:5: note: expanded from here
    __ESBMC_atomic_load(__atomic_load_ptr, &__atomic_load_tmp, (MO));          \
    ^
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:6175:5: warning: implicit declaration of function '__ESBMC_atomic_store' is invalid in C99 [-Wimplicit-function-declaration]
    __atomic_store_n(&(*(aws_atomic_impl_int_t *)(var)), n, aws_atomic_priv_xlate_order(memory_order));
    ^
esbmc_intrinsics.h:107:5: note: expanded from here
    __ESBMC_atomic_store(__atomic_store_ptr, &__atomic_store_tmp, (MO));       \
    ^
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:6183:5: warning: implicit declaration of function '__ESBMC_atomic_store' is invalid in C99 [-Wimplicit-function-declaration]
    __atomic_store_n(&((var)->value), p, aws_atomic_priv_xlate_order(memory_order));
    ^
esbmc_intrinsics.h:107:5: note: expanded from here
    __ESBMC_atomic_store(__atomic_store_ptr, &__atomic_store_tmp, (MO));       \
    ^
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:7377:50: warning: nonnull parameter 'base' will evaluate to 'true' on first encounter [-Wpointer-bool-conversion]
    assume_abort_if_not((((num * size) == 0) || (base)));
                                             ~~  ^~~~
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:1720:46: note: declared 'nonnull' here
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
                                             ^
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:7378:50: warning: nonnull parameter 'base' will evaluate to 'true' on first encounter [-Wpointer-bool-conversion]
    assume_abort_if_not((((num * size) == 0) || (base)));
                                             ~~  ^~~~
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:1720:46: note: declared 'nonnull' here
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
                                             ^
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:7986:32: warning: incompatible function pointer types passing 'int (const void *, const void *, unsigned long)' to parameter of type 'aws_array_list_comparator_fn *' (aka 'int (*)(const void *, const void *)') [-Wincompatible-function-pointer-types]
    aws_array_list_sort(&list, compare);
                               ^~~~~~~
../sv-benchmarks/c/aws-c-common/aws_array_list_sort_harness.i:3563:94: note: passing argument to parameter 'compare_fn' here
void aws_array_list_sort(struct aws_array_list *restrict list, aws_array_list_comparator_fn *compare_fn) {
                                                                                             ^

TRUE
