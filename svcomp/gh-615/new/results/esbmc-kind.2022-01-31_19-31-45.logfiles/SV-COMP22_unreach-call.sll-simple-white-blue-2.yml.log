./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/forester-heap/sll-simple-white-blue-2.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/forester-heap/sll-simple-white-blue-2.i --32 --witness-output sll-simple-white-blue-2.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/forester-heap/sll-simple-white-blue-2.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.154s
GOTO program processing time: 0.002s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Not unwinding 
Symex completed in: 0.006s (102 assignments)
Slicing time: 0.000s (removed 66 assignments)
Generated 1 VCC(s), 1 remaining after simplification (36 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.003s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.003s
Runtime decision procedure: 0.197s
Building error trace

Counterexample:

State 1 file sll-simple-white-blue-2.i line 1000 function main thread 0
----------------------------------------------------
  head->next = { .next=0, .data=nil }

State 2 file sll-simple-white-blue-2.i line 1001 function main thread 0
----------------------------------------------------
  head->data = { .next=0, .data=0 }

State 3 file sll-simple-white-blue-2.i line 1018 function main thread 0
----------------------------------------------------
  x->data = { .next=nil, .data=1 }

State 4 file sll-simple-white-blue-2.i line 1019 function main thread 0
----------------------------------------------------
  x->next = { .next=( struct TSLL *)((void *)(&dynamic_1_value)), .data=1 }

State 5 file sll-simple-white-blue-2.i line 1040 function main thread 0
----------------------------------------------------
  x = &dynamic_5_value

State 6 file sll-simple-white-blue-2.i line 1049 function main thread 0
----------------------------------------------------
  x = dynamic_5_value.next

State 7 file sll-simple-white-blue-2.i line 985 function reach_error thread 0
----------------------------------------------------
Violated property:
  file sll-simple-white-blue-2.i line 985 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 1)


FALSE_REACH
