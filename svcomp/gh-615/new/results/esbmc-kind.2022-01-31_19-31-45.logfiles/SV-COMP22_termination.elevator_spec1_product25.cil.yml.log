./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/termination.prp -s kinduction --arch 32 ../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c --32 --witness-output elevator_spec1_product25.cil.c.graphml --no-pointer-check --no-bounds-check --no-assertions --termination --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.302s
GOTO program processing time: 0.019s
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.026s (202 assignments)
Slicing time: 0.001s (removed 200 assignments)
Generated 1 VCC(s), 1 remaining after simplification (2 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.000s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.000s
Runtime decision procedure: 0.000s
The forward condition is unable to prove the property
*** Checking forward condition, k = 3
Starting Bounded Model Checking
Unwinding loop 6  iteration  1   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  2   file elevator_spec1_product25.cil.c line 699 function cleanup
Not unwinding 
Symex completed in: 0.052s (328 assignments)
Slicing time: 0.000s (removed 326 assignments)
Generated 1 VCC(s), 1 remaining after simplification (2 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.000s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.000s
Runtime decision procedure: 0.000s
The forward condition is unable to prove the property
*** Checking forward condition, k = 5
Starting Bounded Model Checking
Unwinding loop 6  iteration  1   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  2   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  3   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  4   file elevator_spec1_product25.cil.c line 699 function cleanup
Not unwinding 
Symex completed in: 0.079s (442 assignments)
Slicing time: 0.000s (removed 440 assignments)
Generated 1 VCC(s), 1 remaining after simplification (2 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.000s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.000s
Runtime decision procedure: 0.000s
The forward condition is unable to prove the property
*** Checking forward condition, k = 7
Starting Bounded Model Checking
Unwinding loop 6  iteration  1   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  2   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  3   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  4   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  5   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  6   file elevator_spec1_product25.cil.c line 699 function cleanup
Not unwinding 
Symex completed in: 0.098s (538 assignments)
Slicing time: 0.001s (removed 536 assignments)
Generated 1 VCC(s), 1 remaining after simplification (2 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.000s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.000s
Runtime decision procedure: 0.000s
The forward condition is unable to prove the property
*** Checking forward condition, k = 9
Starting Bounded Model Checking
Unwinding loop 6  iteration  1   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  2   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  3   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  4   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  5   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  6   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  7   file elevator_spec1_product25.cil.c line 699 function cleanup
Unwinding loop 6  iteration  8   file elevator_spec1_product25.cil.c line 699 function cleanup
Symex completed in: 0.118s (633 assignments)
Slicing time: 0.001s (removed 632 assignments)
Generated 0 VCC(s), 0 remaining after simplification (1 assignments)
BMC program time: 0.119s
Building successful trace

VERIFICATION SUCCESSFUL

Solution found by the forward condition; all states are reachable (k = 9

../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3057:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp6);
         ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3057:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp6);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3062:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp7);
           ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3062:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp7);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3067:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp8);
           ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3067:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp8);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3072:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp9);
         ^~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3072:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp9);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3076:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp11);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3076:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp11);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3081:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp12);
           ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3081:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp12);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3086:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
    printf(__cil_tmp13);
           ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3086:12: note: treat the string as an argument to avoid this
    printf(__cil_tmp13);
           ^
           "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3091:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp14);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3091:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp14);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3135:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp20);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3135:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp20);
         ^
         "%s", 
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3192:10: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  printf(__cil_tmp26);
         ^~~~~~~~~~~
../sv-benchmarks/c/product-lines/elevator_spec1_product25.cil.c:3192:10: note: treat the string as an argument to avoid this
  printf(__cil_tmp26);
         ^
         "%s", 

TRUE
