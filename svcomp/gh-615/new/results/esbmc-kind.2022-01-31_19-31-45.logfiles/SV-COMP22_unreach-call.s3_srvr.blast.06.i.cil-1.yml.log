./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/openssl/s3_srvr.blast.06.i.cil-1.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --no-align-check --k-step 2 --floatbv --unlimited-k-steps ../sv-benchmarks/c/openssl/s3_srvr.blast.06.i.cil-1.c --32 --witness-output s3_srvr.blast.06.i.cil-1.c.graphml --no-pointer-check --no-bounds-check --interval-analysis --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/openssl/s3_srvr.blast.06.i.cil-1.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.231s
GOTO program processing time: 0.111s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.769s (797 assignments)
Slicing time: 0.005s (removed 514 assignments)
Generated 1 VCC(s), 1 remaining after simplification (283 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.025s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.025s
Runtime decision procedure: 0.000s
BMC program time: 0.801s
No bug has been found in the base case
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.821s (796 assignments)
Slicing time: 0.005s (removed 514 assignments)
Generated 1 VCC(s), 1 remaining after simplification (282 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.033s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.033s
Runtime decision procedure: 0.661s
The forward condition is unable to prove the property
*** Checking base case, k = 3
Starting Bounded Model Checking
Unwinding loop 2  iteration  1   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  2   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Not unwinding 
Symex completed in: 11.870s (3488 assignments)
Slicing time: 0.076s (removed 2423 assignments)
Generated 1 VCC(s), 1 remaining after simplification (1065 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.119s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.119s
Runtime decision procedure: 0.011s
BMC program time: 12.077s
No bug has been found in the base case
*** Checking forward condition, k = 3
Starting Bounded Model Checking
Unwinding loop 2  iteration  1   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  2   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Not unwinding 
Symex completed in: 12.878s (3487 assignments)
Slicing time: 0.082s (removed 2423 assignments)
Generated 1 VCC(s), 1 remaining after simplification (1064 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.123s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.123s
Runtime decision procedure: 1.816s
The forward condition is unable to prove the property
*** Checking inductive step, k = 3
Starting Bounded Model Checking
Unwinding loop 2  iteration  1   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  2   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Not unwinding 
Symex completed in: 1.242s (3462 assignments)
Slicing time: 0.279s (removed 1886 assignments)
Generated 1 VCC(s), 1 remaining after simplification (1576 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.051s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.051s
Runtime decision procedure: 4.688s
The inductive step is unable to prove the property
*** Checking base case, k = 5
Starting Bounded Model Checking
Unwinding loop 2  iteration  1   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  2   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  3   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  4   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Not unwinding 
Symex completed in: 40.423s (6080 assignments)
Slicing time: 0.235s (removed 4101 assignments)
Generated 1 VCC(s), 1 remaining after simplification (1979 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.226s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.226s
Runtime decision procedure: 0.045s
BMC program time: 40.931s
No bug has been found in the base case
*** Checking forward condition, k = 5
Starting Bounded Model Checking
Unwinding loop 2  iteration  1   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  2   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  3   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  4   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Not unwinding 
Symex completed in: 46.922s (6079 assignments)
Slicing time: 0.249s (removed 4101 assignments)
Generated 1 VCC(s), 1 remaining after simplification (1978 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.267s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.267s
Runtime decision procedure: 3.273s
The forward condition is unable to prove the property
*** Checking base case, k = 7
Starting Bounded Model Checking
Unwinding loop 2  iteration  1   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  2   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  3   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  4   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  5   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Unwinding loop 2  iteration  6   file s3_srvr.blast.06.i.cil-1.c line 1138 function ssl3_accept
Not unwinding 
Symex completed in: 97.016s (8672 assignments)
Slicing time: 0.515s (removed 5779 assignments)
Generated 1 VCC(s), 1 remaining after simplification (2893 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.398s
Solving with solver Boolector 3.2.1
Encoding to solver time: 0.398s
Runtime decision procedure: 5.396s
Building error trace
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...
Fetching array elements inside tuples currently unimplemented, returning empty expression...

Counterexample:

State 1 file s3_srvr.blast.06.i.cil-1.c line 1073 function main thread 0
----------------------------------------------------
  s->s3 = { .version=nil, .type=nil, .method=nil, .rbio=nil, .wbio=nil,
    .bbio=nil, .rwstate=nil, .in_handshake=nil, .handshake_func=nil,
    .server=nil, .new_session=nil, .quiet_shutdown=nil,
    .shutdown=nil, .state=nil, .rstate=nil,
    .init_buf=nil, .init_num=nil, .init_off=nil,
    .packet=nil, .packet_length=nil, .s2=nil,
    .s3=( struct ssl3_state_st *)((void *)(&dynamic_454_value)), .read_ahead=nil,
    .hit=nil, .purpose=nil, .trust=nil,
    .cipher_list=nil, .cipher_list_by_id=nil, .enc_read_ctx=nil,
    .read_hash=nil, .expand=nil, .enc_write_ctx=nil,
    .write_hash=nil, .compress=nil,
    .cert=nil, .sid_ctx_length=nil, .sid_ctx=nil,
    .session=nil, .verify_mode=nil, .verify_depth=nil,
    .verify_callback=nil, .info_callback=nil,
    .error=nil, .error_code=nil, .ctx=nil,
    .debug=nil, .verify_result=nil, .ex_data=nil,
    .client_CA=nil, .references=nil, .options=nil,
    .mode=nil, .first_packet=nil, .client_version=nil }

State 2 file s3_srvr.blast.06.i.cil-1.c line 1074 function main thread 0
----------------------------------------------------
  s->ctx = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=0,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=0,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=0, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session={ .pointer_object=nil, .pointer_offset=nil }, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=( struct ssl_ctx_st *)((void *)(&dynamic_455_value)), .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 3 file s3_srvr.blast.06.i.cil-1.c line 1075 function main thread 0
----------------------------------------------------
  s->session = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=0,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=0,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=0, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=( struct ssl_session_st *)((void *)(&dynamic_456_value)), .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 4 file s3_srvr.blast.06.i.cil-1.c line 1095 function ssl3_accept thread 0
----------------------------------------------------
  tmp___3 = -2147483648 (10000000 00000000 00000000 00000000)

State 5 file s3_srvr.blast.06.i.cil-1.c line 1096 function ssl3_accept thread 0
----------------------------------------------------
  tmp___4 = -2147483648 (10000000 00000000 00000000 00000000)

State 6 file s3_srvr.blast.06.i.cil-1.c line 1097 function ssl3_accept thread 0
----------------------------------------------------
  tmp___5 = -2147483648 (10000000 00000000 00000000 00000000)

State 7 file s3_srvr.blast.06.i.cil-1.c line 1098 function ssl3_accept thread 0
----------------------------------------------------
  tmp___6 = 268435552 (00010000 00000000 00000000 01100000)

State 8 file s3_srvr.blast.06.i.cil-1.c line 1100 function ssl3_accept thread 0
----------------------------------------------------
  tmp___8 = 0 (00000000 00000000 00000000 00000000)

State 9 file s3_srvr.blast.06.i.cil-1.c line 1101 function ssl3_accept thread 0
----------------------------------------------------
  tmp___9 = -1 (11111111 11111111 11111111 11111111)

State 10 file s3_srvr.blast.06.i.cil-1.c line 1102 function ssl3_accept thread 0
----------------------------------------------------
  tmp___10 = -1 (11111111 11111111 11111111 11111111)

State 11 file s3_srvr.blast.06.i.cil-1.c line 1107 function ssl3_accept thread 0
----------------------------------------------------
  s->state = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=0,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8464,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=0, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 12 file s3_srvr.blast.06.i.cil-1.c line 1109 function ssl3_accept thread 0
----------------------------------------------------
  s->hit = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=0,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8464,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 13 file s3_srvr.blast.06.i.cil-1.c line 1110 function ssl3_accept thread 0
----------------------------------------------------
  s->state = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=0,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8464,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 14 file s3_srvr.blast.06.i.cil-1.c line 1118 function ssl3_accept thread 0
----------------------------------------------------
  cb = dynamic_453_value.info_callback

State 15 file s3_srvr.blast.06.i.cil-1.c line 1122 function ssl3_accept thread 0
----------------------------------------------------
  s->in_handshake = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=dynamic_453_value.in_handshake + 1,
    .handshake_func=0,
    .server=0, .new_session=0, .quiet_shutdown=0,
    .shutdown=0, .state=8464, .rstate=0,
    .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 16 file s3_srvr.blast.06.i.cil-1.c line 1140 function ssl3_accept thread 0
----------------------------------------------------
  state = dynamic_453_value.state

State 17 file s3_srvr.blast.06.i.cil-1.c line 1325 function ssl3_accept thread 0
----------------------------------------------------
  s->shutdown = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8464,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 18 file s3_srvr.blast.06.i.cil-1.c line 1326 function ssl3_accept thread 0
----------------------------------------------------
  ret = 2147483647 (01111111 11111111 11111111 11111111)

State 19 file s3_srvr.blast.06.i.cil-1.c line 1338 function ssl3_accept thread 0
----------------------------------------------------
  s->state = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8496,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 20 file s3_srvr.blast.06.i.cil-1.c line 1339 function ssl3_accept thread 0
----------------------------------------------------
  s->init_num = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8496,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 21 file s3_srvr.blast.06.i.cil-1.c line 1140 function ssl3_accept thread 0
----------------------------------------------------
  state = dynamic_453_value.state

State 22 file s3_srvr.blast.06.i.cil-1.c line 1343 function ssl3_accept thread 0
----------------------------------------------------
  ret = 2147483647 (01111111 11111111 11111111 11111111)

State 23 file s3_srvr.blast.06.i.cil-1.c line 1355 function ssl3_accept thread 0
----------------------------------------------------
  s->state = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8656,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 24 file s3_srvr.blast.06.i.cil-1.c line 1359 function ssl3_accept thread 0
----------------------------------------------------
  s->init_num = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8656,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 25 file s3_srvr.blast.06.i.cil-1.c line 1140 function ssl3_accept thread 0
----------------------------------------------------
  state = dynamic_453_value.state

State 26 file s3_srvr.blast.06.i.cil-1.c line 1604 function ssl3_accept thread 0
----------------------------------------------------
  s->session->cipher = { .ssl_version=0, .key_arg_length=0, .key_arg=nil, .master_key_length=0,
    .master_key=nil, .session_id_length=0,
    .session_id=nil, .sid_ctx_length=0,
    .sid_ctx=nil, .not_resumable=0, .sess_cert=0,
    .peer=INVALID524292, .verify_result=0, .references=0,
    .timeout=0, .time=0, .compress_meth=0, .cipher=dynamic_454_value.tmp.new_cipher,
    .cipher_id=0,
    .ciphers=0, .ex_data={ .sk=0, .dummy=0 }, .prev=0,
    .next=0 }

State 27 file s3_srvr.blast.06.i.cil-1.c line 1611 function ssl3_accept thread 0
----------------------------------------------------
  ret = 2147483647 (01111111 11111111 11111111 11111111)

State 28 file s3_srvr.blast.06.i.cil-1.c line 1634 function ssl3_accept thread 0
----------------------------------------------------
  s->state = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8672,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 29 file s3_srvr.blast.06.i.cil-1.c line 1635 function ssl3_accept thread 0
----------------------------------------------------
  s->init_num = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8672,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 30 file s3_srvr.blast.06.i.cil-1.c line 1140 function ssl3_accept thread 0
----------------------------------------------------
  state = dynamic_453_value.state

State 31 file s3_srvr.blast.06.i.cil-1.c line 1645 function ssl3_accept thread 0
----------------------------------------------------
  ret = 2147483647 (01111111 11111111 11111111 11111111)

State 32 file s3_srvr.blast.06.i.cil-1.c line 1668 function ssl3_accept thread 0
----------------------------------------------------
  s->state = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8448,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 33 file s3_srvr.blast.06.i.cil-1.c line 1670 function ssl3_accept thread 0
----------------------------------------------------
  s->s3->tmp.next_state = { .flags=0, .delay_buf_pop_ret=0, .read_sequence=nil, .read_mac_secret=nil,
    .write_sequence=nil, .write_mac_secret=nil,
    .server_random=nil, .client_random=nil,
    .rbuf={ .buf=0, .offset=0, .left=0 }, .wbuf={ .buf=0, .offset=0, .left=0 },
    .rrec={ .type=0, .length=0, .off=0, .data=0, .input=0, .comp=0 },
    .wrec={ .type=0, .length=0, .off=0, .data=0, .input=0, .comp=0 },
    .alert_fragment=nil,
    .anon_pad$13=0, .alert_fragment_len=0,
    .handshake_fragment=nil, .handshake_fragment_len=0,
    .wnum=0, .wpend_tot=0, .wpend_type=0,
    .wpend_ret=0, .wpend_buf=0, .finish_dgst1={ .digest=0, .md=union
  * type: union
      * tag: union __anonunion_md_22
      * components: 
        0: component
            * type: array
                * size: constant
                    * type: signedbv
                        * width: 32
                    * value: 00000000000000000000000000000100
                * subtype: unsignedbv
                    * width: 8
            * name: base
            * pretty_name: base
        1: component
            * type: struct
                * tag: struct MD2state_st
                * components: 
                  0: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
                  1: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 8
                      * name: data
                      * pretty_name: data
                  2: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: cksm
                      * pretty_name: cksm
                  3: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: state
                      * pretty_name: state
            * name: md2
            * pretty_name: md2
        2: component
            * type: struct
                * tag: struct MD5state_st
                * components: 
                  0: component
                      * type: unsignedbv
                          * width: 32
                      * name: A
                      * pretty_name: A
                  1: component
                      * type: unsignedbv
                          * width: 32
                      * name: B
                      * pretty_name: B
                  2: component
                      * type: unsignedbv
                          * width: 32
                      * name: C
                      * pretty_name: C
                  3: component
                      * type: unsignedbv
                          * width: 32
                      * name: D
                      * pretty_name: D
                  4: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nl
                      * pretty_name: Nl
                  5: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nh
                      * pretty_name: Nh
                  6: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: data
                      * pretty_name: data
                  7: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
            * name: md5
            * pretty_name: md5
        3: component
            * type: struct
                * tag: struct MD4state_st
                * components: 
                  0: component
                      * type: unsignedbv
                          * width: 32
                      * name: A
                      * pretty_name: A
                  1: component
                      * type: unsignedbv
                          * width: 32
                      * name: B
                      * pretty_name: B
                  2: component
                      * type: unsignedbv
                          * width: 32
                      * name: C
                      * pretty_name: C
                  3: component
                      * type: unsignedbv
                          * width: 32
                      * name: D
                      * pretty_name: D
                  4: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nl
                      * pretty_name: Nl
                  5: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nh
                      * pretty_name: Nh
                  6: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: data
                      * pretty_name: data
                  7: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
            * name: md4
            * pretty_name: md4
        4: component
            * type: struct
                * tag: struct RIPEMD160state_st
                * components: 
                  0: component
                      * type: unsignedbv
                          * width: 32
                      * name: A
                      * pretty_name: A
                  1: component
                      * type: unsignedbv
                          * width: 32
                      * name: B
                      * pretty_name: B
                  2: component
                      * type: unsignedbv
                          * width: 32
                      * name: C
                      * pretty_name: C
                  3: component
                      * type: unsignedbv
                          * width: 32
                      * name: D
                      * pretty_name: D
                  4: component
                      * type: unsignedbv
                          * width: 32
                      * name: E
                      * pretty_name: E
                  5: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nl
                      * pretty_name: Nl
                  6: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nh
                      * pretty_name: Nh
                  7: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: data
                      * pretty_name: data
                  8: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
            * name: ripemd160
            * pretty_name: ripemd160
        5: component
            * type: struct
                * tag: struct SHAstate_st
                * components: 
                  0: component
                      * type: unsignedbv
                          * width: 32
                      * name: h0
                      * pretty_name: h0
                  1: component
                      * type: unsignedbv
                          * width: 32
                      * name: h1
                      * pretty_name: h1
                  2: component
                      * type: unsignedbv
                          * width: 32
                      * name: h2
                      * pretty_name: h2
                  3: component
                      * type: unsignedbv
                          * width: 32
                      * name: h3
                      * pretty_name: h3
                  4: component
                      * type: unsignedbv
                          * width: 32
                      * name: h4
                      * pretty_name: h4
                  5: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nl
                      * pretty_name: Nl
                  6: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nh
                      * pretty_name: Nh
                  7: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: data
                      * pretty_name: data
                  8: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
            * name: sha
            * pretty_name: sha
        6: component
            * type: struct
                * tag: struct mdc2_ctx_st
                * components: 
                  0: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
                  1: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000001000
                          * subtype: unsignedbv
                              * width: 8
                      * name: data
                      * pretty_name: data
                  2: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000001000
                          * subtype: unsignedbv
                              * width: 8
                      * name: h
                      * pretty_name: h
                  3: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000001000
                          * subtype: unsignedbv
                              * width: 8
                      * name: hh
                      * pretty_name: hh
                  4: component
                      * type: signedbv
                          * width: 32
                      * name: pad_type
                      * pretty_name: pad_type
            * name: mdc2
            * pretty_name: mdc2
  * operands: 
    0: bitcast
        * type: array
            * size: constant
                * type: signedbv
                    * width: 32
                * value: 00000000000000000000000000000100
            * subtype: unsignedbv
                * width: 8
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 32
              * value: 00000000000000000000000000000000
    1: bitcast
        * type: struct
            * tag: struct MD2state_st
            * components: 
              0: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
              1: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 8
                  * name: data
                  * pretty_name: data
              2: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: cksm
                  * pretty_name: cksm
              3: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: state
                  * pretty_name: state
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 1184
              * value: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    2: bitcast
        * type: struct
            * tag: struct MD5state_st
            * components: 
              0: component
                  * type: unsignedbv
                      * width: 32
                  * name: A
                  * pretty_name: A
              1: component
                  * type: unsignedbv
                      * width: 32
                  * name: B
                  * pretty_name: B
              2: component
                  * type: unsignedbv
                      * width: 32
                  * name: C
                  * pretty_name: C
              3: component
                  * type: unsignedbv
                      * width: 32
                  * name: D
                  * pretty_name: D
              4: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nl
                  * pretty_name: Nl
              5: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nh
                  * pretty_name: Nh
              6: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: data
                  * pretty_name: data
              7: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 736
              * value
    3: bitcast
        * type: struct
            * tag: struct MD4state_st
            * components: 
              0: component
                  * type: unsignedbv
                      * width: 32
                  * name: A
                  * pretty_name: A
              1: component
                  * type: unsignedbv
                      * width: 32
                  * name: B
                  * pretty_name: B
              2: component
                  * type: unsignedbv
                      * width: 32
                  * name: C
                  * pretty_name: C
              3: component
                  * type: unsignedbv
                      * width: 32
                  * name: D
                  * pretty_name: D
              4: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nl
                  * pretty_name: Nl
              5: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nh
                  * pretty_name: Nh
              6: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: data
                  * pretty_name: data
              7: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 736
              * value
    4: bitcast
        * type: struct
            * tag: struct RIPEMD160state_st
            * components: 
              0: component
                  * type: unsignedbv
                      * width: 32
                  * name: A
                  * pretty_name: A
              1: component
                  * type: unsignedbv
                      * width: 32
                  * name: B
                  * pretty_name: B
              2: component
                  * type: unsignedbv
                      * width: 32
                  * name: C
                  * pretty_name: C
              3: component
                  * type: unsignedbv
                      * width: 32
                  * name: D
                  * pretty_name: D
              4: component
                  * type: unsignedbv
                      * width: 32
                  * name: E
                  * pretty_name: E
              5: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nl
                  * pretty_name: Nl
              6: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nh
                  * pretty_name: Nh
              7: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: data
                  * pretty_name: data
              8: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 768
              * value
    5: bitcast
        * type: struct
            * tag: struct SHAstate_st
            * components: 
              0: component
                  * type: unsignedbv
                      * width: 32
                  * name: h0
                  * pretty_name: h0
              1: component
                  * type: unsignedbv
                      * width: 32
                  * name: h1
                  * pretty_name: h1
              2: component
                  * type: unsignedbv
                      * width: 32
                  * name: h2
                  * pretty_name: h2
              3: component
                  * type: unsignedbv
                      * width: 32
                  * name: h3
                  * pretty_name: h3
              4: component
                  * type: unsignedbv
                      * width: 32
                  * name: h4
                  * pretty_name: h4
              5: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nl
                  * pretty_name: Nl
              6: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nh
                  * pretty_name: Nh
              7: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: data
                  * pretty_name: data
              8: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 768
              * value
    6: bitcast
        * type: struct
            * tag: struct mdc2_ctx_st
            * components: 
              0: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
              1: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000001000
                      * subtype: unsignedbv
                          * width: 8
                  * name: data
                  * pretty_name: data
              2: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000001000
                      * subtype: unsignedbv
                          * width: 8
                  * name: h
                  * pretty_name: h
              3: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000001000
                      * subtype: unsignedbv
                          * width: 8
                  * name: hh
                  * pretty_name: hh
              4: component
                  * type: signedbv
                      * width: 32
                  * name: pad_type
                  * pretty_name: pad_type
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 256
              * value: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  * component_name:  },
    .finish_dgst2={ .digest=0, .md=union
  * type: union
      * tag: union __anonunion_md_22
      * components: 
        0: component
            * type: array
                * size: constant
                    * type: signedbv
                        * width: 32
                    * value: 00000000000000000000000000000100
                * subtype: unsignedbv
                    * width: 8
            * name: base
            * pretty_name: base
        1: component
            * type: struct
                * tag: struct MD2state_st
                * components: 
                  0: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
                  1: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 8
                      * name: data
                      * pretty_name: data
                  2: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: cksm
                      * pretty_name: cksm
                  3: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: state
                      * pretty_name: state
            * name: md2
            * pretty_name: md2
        2: component
            * type: struct
                * tag: struct MD5state_st
                * components: 
                  0: component
                      * type: unsignedbv
                          * width: 32
                      * name: A
                      * pretty_name: A
                  1: component
                      * type: unsignedbv
                          * width: 32
                      * name: B
                      * pretty_name: B
                  2: component
                      * type: unsignedbv
                          * width: 32
                      * name: C
                      * pretty_name: C
                  3: component
                      * type: unsignedbv
                          * width: 32
                      * name: D
                      * pretty_name: D
                  4: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nl
                      * pretty_name: Nl
                  5: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nh
                      * pretty_name: Nh
                  6: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: data
                      * pretty_name: data
                  7: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
            * name: md5
            * pretty_name: md5
        3: component
            * type: struct
                * tag: struct MD4state_st
                * components: 
                  0: component
                      * type: unsignedbv
                          * width: 32
                      * name: A
                      * pretty_name: A
                  1: component
                      * type: unsignedbv
                          * width: 32
                      * name: B
                      * pretty_name: B
                  2: component
                      * type: unsignedbv
                          * width: 32
                      * name: C
                      * pretty_name: C
                  3: component
                      * type: unsignedbv
                          * width: 32
                      * name: D
                      * pretty_name: D
                  4: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nl
                      * pretty_name: Nl
                  5: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nh
                      * pretty_name: Nh
                  6: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: data
                      * pretty_name: data
                  7: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
            * name: md4
            * pretty_name: md4
        4: component
            * type: struct
                * tag: struct RIPEMD160state_st
                * components: 
                  0: component
                      * type: unsignedbv
                          * width: 32
                      * name: A
                      * pretty_name: A
                  1: component
                      * type: unsignedbv
                          * width: 32
                      * name: B
                      * pretty_name: B
                  2: component
                      * type: unsignedbv
                          * width: 32
                      * name: C
                      * pretty_name: C
                  3: component
                      * type: unsignedbv
                          * width: 32
                      * name: D
                      * pretty_name: D
                  4: component
                      * type: unsignedbv
                          * width: 32
                      * name: E
                      * pretty_name: E
                  5: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nl
                      * pretty_name: Nl
                  6: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nh
                      * pretty_name: Nh
                  7: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: data
                      * pretty_name: data
                  8: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
            * name: ripemd160
            * pretty_name: ripemd160
        5: component
            * type: struct
                * tag: struct SHAstate_st
                * components: 
                  0: component
                      * type: unsignedbv
                          * width: 32
                      * name: h0
                      * pretty_name: h0
                  1: component
                      * type: unsignedbv
                          * width: 32
                      * name: h1
                      * pretty_name: h1
                  2: component
                      * type: unsignedbv
                          * width: 32
                      * name: h2
                      * pretty_name: h2
                  3: component
                      * type: unsignedbv
                          * width: 32
                      * name: h3
                      * pretty_name: h3
                  4: component
                      * type: unsignedbv
                          * width: 32
                      * name: h4
                      * pretty_name: h4
                  5: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nl
                      * pretty_name: Nl
                  6: component
                      * type: unsignedbv
                          * width: 32
                      * name: Nh
                      * pretty_name: Nh
                  7: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000010000
                          * subtype: unsignedbv
                              * width: 32
                      * name: data
                      * pretty_name: data
                  8: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
            * name: sha
            * pretty_name: sha
        6: component
            * type: struct
                * tag: struct mdc2_ctx_st
                * components: 
                  0: component
                      * type: signedbv
                          * width: 32
                      * name: num
                      * pretty_name: num
                  1: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000001000
                          * subtype: unsignedbv
                              * width: 8
                      * name: data
                      * pretty_name: data
                  2: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000001000
                          * subtype: unsignedbv
                              * width: 8
                      * name: h
                      * pretty_name: h
                  3: component
                      * type: array
                          * size: constant
                              * type: signedbv
                                  * width: 32
                              * value: 00000000000000000000000000001000
                          * subtype: unsignedbv
                              * width: 8
                      * name: hh
                      * pretty_name: hh
                  4: component
                      * type: signedbv
                          * width: 32
                      * name: pad_type
                      * pretty_name: pad_type
            * name: mdc2
            * pretty_name: mdc2
  * operands: 
    0: bitcast
        * type: array
            * size: constant
                * type: signedbv
                    * width: 32
                * value: 00000000000000000000000000000100
            * subtype: unsignedbv
                * width: 8
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 32
              * value: 00000000000000000000000000000000
    1: bitcast
        * type: struct
            * tag: struct MD2state_st
            * components: 
              0: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
              1: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 8
                  * name: data
                  * pretty_name: data
              2: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: cksm
                  * pretty_name: cksm
              3: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: state
                  * pretty_name: state
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 1184
              * value: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    2: bitcast
        * type: struct
            * tag: struct MD5state_st
            * components: 
              0: component
                  * type: unsignedbv
                      * width: 32
                  * name: A
                  * pretty_name: A
              1: component
                  * type: unsignedbv
                      * width: 32
                  * name: B
                  * pretty_name: B
              2: component
                  * type: unsignedbv
                      * width: 32
                  * name: C
                  * pretty_name: C
              3: component
                  * type: unsignedbv
                      * width: 32
                  * name: D
                  * pretty_name: D
              4: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nl
                  * pretty_name: Nl
              5: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nh
                  * pretty_name: Nh
              6: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: data
                  * pretty_name: data
              7: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 736
              * value
    3: bitcast
        * type: struct
            * tag: struct MD4state_st
            * components: 
              0: component
                  * type: unsignedbv
                      * width: 32
                  * name: A
                  * pretty_name: A
              1: component
                  * type: unsignedbv
                      * width: 32
                  * name: B
                  * pretty_name: B
              2: component
                  * type: unsignedbv
                      * width: 32
                  * name: C
                  * pretty_name: C
              3: component
                  * type: unsignedbv
                      * width: 32
                  * name: D
                  * pretty_name: D
              4: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nl
                  * pretty_name: Nl
              5: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nh
                  * pretty_name: Nh
              6: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: data
                  * pretty_name: data
              7: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 736
              * value
    4: bitcast
        * type: struct
            * tag: struct RIPEMD160state_st
            * components: 
              0: component
                  * type: unsignedbv
                      * width: 32
                  * name: A
                  * pretty_name: A
              1: component
                  * type: unsignedbv
                      * width: 32
                  * name: B
                  * pretty_name: B
              2: component
                  * type: unsignedbv
                      * width: 32
                  * name: C
                  * pretty_name: C
              3: component
                  * type: unsignedbv
                      * width: 32
                  * name: D
                  * pretty_name: D
              4: component
                  * type: unsignedbv
                      * width: 32
                  * name: E
                  * pretty_name: E
              5: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nl
                  * pretty_name: Nl
              6: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nh
                  * pretty_name: Nh
              7: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: data
                  * pretty_name: data
              8: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 768
              * value
    5: bitcast
        * type: struct
            * tag: struct SHAstate_st
            * components: 
              0: component
                  * type: unsignedbv
                      * width: 32
                  * name: h0
                  * pretty_name: h0
              1: component
                  * type: unsignedbv
                      * width: 32
                  * name: h1
                  * pretty_name: h1
              2: component
                  * type: unsignedbv
                      * width: 32
                  * name: h2
                  * pretty_name: h2
              3: component
                  * type: unsignedbv
                      * width: 32
                  * name: h3
                  * pretty_name: h3
              4: component
                  * type: unsignedbv
                      * width: 32
                  * name: h4
                  * pretty_name: h4
              5: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nl
                  * pretty_name: Nl
              6: component
                  * type: unsignedbv
                      * width: 32
                  * name: Nh
                  * pretty_name: Nh
              7: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000010000
                      * subtype: unsignedbv
                          * width: 32
                  * name: data
                  * pretty_name: data
              8: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 768
              * value
    6: bitcast
        * type: struct
            * tag: struct mdc2_ctx_st
            * components: 
              0: component
                  * type: signedbv
                      * width: 32
                  * name: num
                  * pretty_name: num
              1: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000001000
                      * subtype: unsignedbv
                          * width: 8
                  * name: data
                  * pretty_name: data
              2: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000001000
                      * subtype: unsignedbv
                          * width: 8
                  * name: h
                  * pretty_name: h
              3: component
                  * type: array
                      * size: constant
                          * type: signedbv
                              * width: 32
                          * value: 00000000000000000000000000001000
                      * subtype: unsignedbv
                          * width: 8
                  * name: hh
                  * pretty_name: hh
              4: component
                  * type: signedbv
                      * width: 32
                  * name: pad_type
                  * pretty_name: pad_type
        * operands: 
          0: constant
              * type: unsignedbv
                  * width: 256
              * value: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  * component_name:  },
    .change_cipher_spec=0,
    .warn_alert=0, .fatal_alert=0,
    .alert_dispatch=0, .send_alert=nil, .anon_pad$29=0,
    .renegotiate=0, .total_renegotiations=0, .num_renegotiations=0,
    .in_read_app_data=0, .tmp=dynamic_454_value.tmp WITH [next_state:=8640] }

State 34 file s3_srvr.blast.06.i.cil-1.c line 1674 function ssl3_accept thread 0
----------------------------------------------------
  s->init_num = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=8448,
    .rstate=0, .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 35 file s3_srvr.blast.06.i.cil-1.c line 1140 function ssl3_accept thread 0
----------------------------------------------------
  state = dynamic_453_value.state

State 36 file s3_srvr.blast.06.i.cil-1.c line 1505 function ssl3_accept thread 0
----------------------------------------------------
  s->state = { .version=1073742592, .type=0, .method=0, .rbio=0,
    .wbio=0, .bbio=0, .rwstate=0, .in_handshake=1,
    .handshake_func=0, .server=0, .new_session=0,
    .quiet_shutdown=0, .shutdown=0, .state=dynamic_454_value.tmp.next_state,
    .rstate=0,
    .init_buf=&dynamic_454_value, .init_num=0,
    .init_off=0, .packet=0, .packet_length=0,
    .s2=0, .s3=&dynamic_454_value, .read_ahead=0,
    .hit=-1, .purpose=0, .trust=0, .cipher_list=0,
    .cipher_list_by_id=0, .enc_read_ctx=0,
    .read_hash=0, .expand=0, .enc_write_ctx=0,
    .write_hash=0, .compress=0, .cert=INVALID2048,
    .sid_ctx_length=0, .sid_ctx=nil,
    .session=&dynamic_456_value, .verify_mode=1,
    .verify_depth=0, .verify_callback=0, .info_callback=INVALID67108868,
    .error=0, .error_code=0,
    .ctx=&dynamic_455_value, .debug=-2147483648,
    .verify_result=0, .ex_data={ .sk=0, .dummy=0 },
    .client_CA=0, .references=0,
    .options=0, .mode=0, .first_packet=0, .client_version=0 }

State 37 file s3_srvr.blast.06.i.cil-1.c line 1140 function ssl3_accept thread 0
----------------------------------------------------
  state = dynamic_453_value.state

State 38 file s3_srvr.blast.06.i.cil-1.c line 1572 function ssl3_accept thread 0
----------------------------------------------------
  ret = 0 (00000000 00000000 00000000 00000000)

State 39 file s3_srvr.blast.06.i.cil-1.c line 3 function reach_error thread 0
----------------------------------------------------
Violated property:
  file s3_srvr.blast.06.i.cil-1.c line 3 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 7)


FALSE_REACH
