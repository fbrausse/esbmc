./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/unreach-call.prp -s kinduction --arch 32 ../sv-benchmarks/c/ldv-regression/rule60_list2.c_1.i


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/ldv-regression/rule60_list2.c_1.i --32 --witness-output rule60_list2.c_1.i.graphml --no-pointer-check --no-bounds-check --interval-analysis --goto-unwind --unlimited-goto-unwind --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/ldv-regression/rule60_list2.c_1.i: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.107s
GOTO program processing time: 0.001s
*** Checking base case, k = 1
Starting Bounded Model Checking
Symex completed in: 0.060s (75 assignments)
Slicing time: 0.000s (removed 32 assignments)
Generated 4 VCC(s), 4 remaining after simplification (43 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.000s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.000s
Runtime decision procedure: 0.002s
Building error trace

Counterexample:

State 1 file rule60_list2.c_1.i line 547 function main thread 0
----------------------------------------------------
  dev1 = ( struct list_head *)0

State 2 file rule60_list2.c_1.i line 548 function main thread 0
----------------------------------------------------
  dev2 = ( struct list_head *)0

State 3 file rule60_list2.c_1.i line 538 function list_add thread 0
----------------------------------------------------
  elem = 0

State 4 file rule60_list2.c_1.i line 3 function reach_error thread 0
----------------------------------------------------
Violated property:
  file rule60_list2.c_1.i line 3 function reach_error
  assertion 0
  0


VERIFICATION FAILED

Bug found (k = 1)


FALSE_REACH
