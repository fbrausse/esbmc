./esbmc-wrapper.py -p ../sv-benchmarks/c/properties/valid-memsafety.prp -s kinduction --arch 32 ../sv-benchmarks/c/memsafety-ext3/getNumbers1-1.c


--------------------------------------------------------------------------------


Verifying with ESBMC
Command: ./esbmc --no-div-by-zero-check --force-malloc-success --state-hashing --add-symex-value-sets --no-align-check --k-step 5 --floatbv --unlimited-k-steps ../sv-benchmarks/c/memsafety-ext3/getNumbers1-1.c --32 --witness-output getNumbers1-1.c.graphml --memory-leak-check --no-assertions --k-induction --max-inductive-step 3 
ESBMC version 6.8.0 64-bit x86_64 linux
Target: 32-bit little-endian x86_64-unknown-linux with esbmc libc
file ../sv-benchmarks/c/memsafety-ext3/getNumbers1-1.c: Parsing
Converting
Generating GOTO Program
GOTO program creation time: 0.136s
GOTO program processing time: 0.000s
*** Checking base case, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.002s (27 assignments)
Slicing time: 0.000s (removed 20 assignments)
Generated 2 VCC(s), 2 remaining after simplification (7 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.001s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.001s
Runtime decision procedure: 0.000s
BMC program time: 0.004s
No bug has been found in the base case
*** Checking forward condition, k = 1
Starting Bounded Model Checking
Not unwinding 
Symex completed in: 0.002s (27 assignments)
Slicing time: 0.000s (removed 20 assignments)
Generated 3 VCC(s), 3 remaining after simplification (7 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.000s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.000s
Runtime decision procedure: 0.016s
The forward condition is unable to prove the property
*** Checking base case, k = 6
Starting Bounded Model Checking
Unwinding loop 1  iteration  1   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  2   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  3   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  4   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  5   file getNumbers1-1.c line 10 function getNumbers
Not unwinding 
Symex completed in: 0.006s (62 assignments)
Slicing time: 0.000s (removed 45 assignments)
Generated 12 VCC(s), 12 remaining after simplification (17 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.001s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.001s
Runtime decision procedure: 0.001s
BMC program time: 0.008s
No bug has been found in the base case
*** Checking forward condition, k = 6
Starting Bounded Model Checking
Unwinding loop 1  iteration  1   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  2   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  3   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  4   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  5   file getNumbers1-1.c line 10 function getNumbers
Not unwinding 
Symex completed in: 0.005s (62 assignments)
Slicing time: 0.001s (removed 45 assignments)
Generated 13 VCC(s), 13 remaining after simplification (17 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.001s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.001s
Runtime decision procedure: 0.016s
The forward condition is unable to prove the property
*** Checking base case, k = 11
Starting Bounded Model Checking
Unwinding loop 1  iteration  1   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  2   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  3   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  4   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  5   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  6   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  7   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  8   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  9   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 1  iteration  10   file getNumbers1-1.c line 10 function getNumbers
Unwinding loop 2  iteration  1   file getNumbers1-1.c line 21 function main
Unwinding loop 2  iteration  2   file getNumbers1-1.c line 21 function main
Unwinding loop 2  iteration  3   file getNumbers1-1.c line 21 function main
Unwinding loop 2  iteration  4   file getNumbers1-1.c line 21 function main
Unwinding loop 2  iteration  5   file getNumbers1-1.c line 21 function main
Unwinding loop 2  iteration  6   file getNumbers1-1.c line 21 function main
Unwinding loop 2  iteration  7   file getNumbers1-1.c line 21 function main
Unwinding loop 2  iteration  8   file getNumbers1-1.c line 21 function main
Unwinding loop 2  iteration  9   file getNumbers1-1.c line 21 function main
Unwinding loop 2  iteration  10   file getNumbers1-1.c line 21 function main
Symex completed in: 0.016s (135 assignments)
Slicing time: 0.001s (removed 37 assignments)
Generated 44 VCC(s), 43 remaining after simplification (98 assignments)
No solver specified; defaulting to Boolector
Encoding remaining VCC(s) using bit-vector/floating-point arithmetic
Encoding to solver time: 0.004s
Solving with solver Boolector 3.2.2
Encoding to solver time: 0.004s
Runtime decision procedure: 0.022s
Building error trace

Counterexample:

State 3 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 0 (00000000 00000000 00000000 00000000)

State 4 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 0 (00000000 00000000 00000000 00000000)

State 5 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 0 (00000000 00000000 00000000 00000000)

State 6 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 0 (00000000 00000000 00000000 00000000)

State 9 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 1 (00000000 00000000 00000000 00000001)

State 10 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 1 (00000000 00000000 00000000 00000001)

State 11 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 1 (00000000 00000000 00000000 00000001)

State 12 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 1 (00000000 00000000 00000000 00000001)

State 15 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 2 (00000000 00000000 00000000 00000010)

State 16 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 2 (00000000 00000000 00000000 00000010)

State 17 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 2 (00000000 00000000 00000000 00000010)

State 18 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 2 (00000000 00000000 00000000 00000010)

State 21 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 3 (00000000 00000000 00000000 00000011)

State 22 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 3 (00000000 00000000 00000000 00000011)

State 23 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 3 (00000000 00000000 00000000 00000011)

State 24 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 3 (00000000 00000000 00000000 00000011)

State 27 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 4 (00000000 00000000 00000000 00000100)

State 28 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 4 (00000000 00000000 00000000 00000100)

State 29 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 4 (00000000 00000000 00000000 00000100)

State 30 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 4 (00000000 00000000 00000000 00000100)

State 33 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 5 (00000000 00000000 00000000 00000101)

State 34 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 5 (00000000 00000000 00000000 00000101)

State 35 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 5 (00000000 00000000 00000000 00000101)

State 36 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 5 (00000000 00000000 00000000 00000101)

State 39 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 6 (00000000 00000000 00000000 00000110)

State 40 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 6 (00000000 00000000 00000000 00000110)

State 41 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 6 (00000000 00000000 00000000 00000110)

State 42 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 6 (00000000 00000000 00000000 00000110)

State 45 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 7 (00000000 00000000 00000000 00000111)

State 46 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 7 (00000000 00000000 00000000 00000111)

State 47 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 7 (00000000 00000000 00000000 00000111)

State 48 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 7 (00000000 00000000 00000000 00000111)

State 51 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 8 (00000000 00000000 00000000 00001000)

State 52 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 8 (00000000 00000000 00000000 00001000)

State 53 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 8 (00000000 00000000 00000000 00001000)

State 54 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 8 (00000000 00000000 00000000 00001000)

State 57 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 9 (00000000 00000000 00000000 00001001)

State 58 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 9 (00000000 00000000 00000000 00001001)

State 59 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 9 (00000000 00000000 00000000 00001001)

State 60 file getNumbers1-1.c line 11 function getNumbers thread 0
----------------------------------------------------
  *(array + i) = 9 (00000000 00000000 00000000 00001001)

State 63 file getNumbers1-1.c line 19 function main thread 0
----------------------------------------------------
Violated property:
  file getNumbers1-1.c line 19 function main
  dereference failure: invalid pointer freed


VERIFICATION FAILED

Bug found (k = 11)

../sv-benchmarks/c/memsafety-ext3/getNumbers1-1.c:3:14: warning: incompatible redeclaration of library function 'alloca' [-Wincompatible-library-redeclaration]
extern void* alloca(size_t size);
             ^
../sv-benchmarks/c/memsafety-ext3/getNumbers1-1.c:3:14: note: 'alloca' is a builtin with type 'void *(unsigned int)'

FALSE_FREE
